{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_link",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "won",
          "type": "bool"
        }
      ],
      "name": "Result",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "head",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "player",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keyhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_head",
          "type": "bool"
        }
      ],
      "name": "play",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requestIdToGameIdMapping",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/VRFConsumerBase.sol",
    "1": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "3": "contracts/BettingGame.sol"
  },
  "ast": {
    "absolutePath": "contracts/BettingGame.sol",
    "exportedSymbols": {
      "BettingGame": [
        308
      ],
      "LinkTokenInterface": [
        574
      ],
      "VRFConsumerBase": [
        429
      ],
      "VRFRequestIDBase": [
        479
      ]
    },
    "id": 309,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 309,
        "sourceUnit": 430,
        "src": "25:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 429,
              "src": "110:15:3"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "110:15:3"
          }
        ],
        "canonicalName": "BettingGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 308,
        "linearizedBaseContracts": [
          308,
          429,
          479
        ],
        "name": "BettingGame",
        "nameLocation": "95:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ddca3f43",
            "id": 6,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "148:3:3",
            "nodeType": "VariableDeclaration",
            "scope": 308,
            "src": "133:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "133:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69ebe78e",
            "id": 8,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "172:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 308,
            "src": "157:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 7,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "157:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "201:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 308,
            "src": "185:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "185:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4d1975b4",
            "id": 13,
            "mutability": "mutable",
            "name": "gameCount",
            "nameLocation": "228:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 308,
            "src": "213:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "213:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "240:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "117a5b90",
            "id": 18,
            "mutability": "mutable",
            "name": "games",
            "nameLocation": "279:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 308,
            "src": "247:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$31_storage_$",
              "typeString": "mapping(uint256 => struct BettingGame.Game)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "255:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "247:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$31_storage_$",
                "typeString": "mapping(uint256 => struct BettingGame.Game)"
              },
              "valueType": {
                "id": 16,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15,
                  "name": "Game",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "266:4:3"
                },
                "referencedDeclaration": 31,
                "src": "266:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Game_$31_storage_ptr",
                  "typeString": "struct BettingGame.Game"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "46bd175b",
            "id": 22,
            "mutability": "mutable",
            "name": "requestIdToGameIdMapping",
            "nameLocation": "325:24:3",
            "nodeType": "VariableDeclaration",
            "scope": 308,
            "src": "290:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "298:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "290:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "309:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BettingGame.Game",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "386:2:3",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "378:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "378:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "head",
                "nameLocation": "403:4:3",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "398:9:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "398:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "425:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "417:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "417:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "player",
                "nameLocation": "457:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "441:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:15:3",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Game",
            "nameLocation": "363:4:3",
            "nodeType": "StructDefinition",
            "scope": 308,
            "src": "356:114:3",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "e5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e",
            "id": 35,
            "name": "RequestedRandomness",
            "nameLocation": "482:19:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "510:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "502:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:19:3"
            },
            "src": "476:45:3"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 41,
            "name": "Withdraw",
            "nameLocation": "532:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "549:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "541:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "541:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "564:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "556:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:31:3"
            },
            "src": "526:46:3"
          },
          {
            "anonymous": false,
            "eventSelector": "88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874",
            "id": 47,
            "name": "Received",
            "nameLocation": "583:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "608:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "592:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "624:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "616:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:40:3"
            },
            "src": "577:55:3"
          },
          {
            "anonymous": false,
            "eventSelector": "f83ba849142075c91a16090145a5ae9453a3db63db6f4d0320e28649ac4316e5",
            "id": 57,
            "name": "Result",
            "nameLocation": "643:6:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nameLocation": "666:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "650:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "682:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "674:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "698:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "690:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "won",
                  "nameLocation": "711:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "706:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "649:66:3"
            },
            "src": "637:79:3"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "884:92:3",
              "statements": [
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 72,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "894:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 75,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "910:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "910:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "902:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "902:8:3",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "902:19:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "894:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "894:27:3"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "931:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 81,
                      "name": "_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "937:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "931:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "931:10:3"
                },
                {
                  "expression": {
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "951:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "961:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "951:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "951:18:3"
                }
              ]
            },
            "id": 89,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 68,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59,
                    "src": "860:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 69,
                    "name": "_link",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 61,
                    "src": "877:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 70,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 67,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 429,
                  "src": "844:15:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "844:39:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "751:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "743:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "743:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_link",
                  "nameLocation": "784:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "776:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "776:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "807:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "799:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "829:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "821:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "733:110:3"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:0:3"
            },
            "scope": 308,
            "src": "722:254:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1009:53:3",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1033:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1033:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1045:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1045:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47,
                      "src": "1024:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "EmitStatement",
                  "src": "1019:36:3"
                }
              ]
            },
            "id": 100,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:2:3"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:0:3"
            },
            "scope": 308,
            "src": "982:80:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1089:83:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 103,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1107:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1107:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 105,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1121:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1107:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f74207468652061646d696e",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1128:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e69ad9e3fe9ee4a7c87fc48b849dca2b1a0b72bf882660f86dc86527fbc03243",
                          "typeString": "literal_string \"caller is not the admin\""
                        },
                        "value": "caller is not the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e69ad9e3fe9ee4a7c87fc48b849dca2b1a0b72bf882660f86dc86527fbc03243",
                          "typeString": "literal_string \"caller is not the admin\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1099:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:55:3"
                },
                {
                  "id": 110,
                  "nodeType": "PlaceholderStatement",
                  "src": "1164:1:3"
                }
              ]
            },
            "id": 112,
            "name": "onlyAdmin",
            "nameLocation": "1077:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:3"
            },
            "src": "1068:104:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "1298:590:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1316:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1316:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1329:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3135",
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1335:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "1329:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          }
                        },
                        "src": "1316:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a206d696e696d756d20616c6c6f7765642062657420697320302e303031206574686572",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1339:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87be868e3e89c792340e7a2e12f911dd3e08184cb6ef5c13cd3cf17cf011a01f",
                          "typeString": "literal_string \"BettingGame: minimum allowed bet is 0.001 ether\""
                        },
                        "value": "BettingGame: minimum allowed bet is 0.001 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87be868e3e89c792340e7a2e12f911dd3e08184cb6ef5c13cd3cf17cf011a01f",
                          "typeString": "literal_string \"BettingGame: minimum allowed bet is 0.001 ether\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1308:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:81:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 132,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1415:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BettingGame_$308",
                                  "typeString": "contract BettingGame"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BettingGame_$308",
                                  "typeString": "contract BettingGame"
                                }
                              ],
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1407:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 130,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1407:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1407:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1407:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1432:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 136,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1436:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1436:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1432:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1407:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a20696e73756666696369656e74207661756c742062616c616e6365",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81669cd8d7d71fc0bbf8c9c4239afb772dcb609bed259ee6d00cf9351543e98",
                          "typeString": "literal_string \"BettingGame: insufficient vault balance\""
                        },
                        "value": "BettingGame: insufficient vault balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81669cd8d7d71fc0bbf8c9c4239afb772dcb609bed259ee6d00cf9351543e98",
                          "typeString": "literal_string \"BettingGame: insufficient vault balance\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1399:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1399:90:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:90:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 148,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1530:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BettingGame_$308",
                                    "typeString": "contract BettingGame"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BettingGame_$308",
                                    "typeString": "contract BettingGame"
                                  }
                                ],
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1522:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 146,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1522:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1522:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 144,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "1507:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$574",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 506,
                            "src": "1507:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1507:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 151,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6,
                          "src": "1540:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1507:36:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a20696e73756666696369656e74204c494e4b20746f6b656e",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1545:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3a2cbd78d61661f73d972befc5dcc2e93b0b690e1fa1eb962f58b43a81239fc",
                          "typeString": "literal_string \"BettingGame: insufficient LINK token\""
                        },
                        "value": "BettingGame: insufficient LINK token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3a2cbd78d61661f73d972befc5dcc2e93b0b690e1fa1eb962f58b43a81239fc",
                          "typeString": "literal_string \"BettingGame: insufficient LINK token\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1499:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1499:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "1499:85:3"
                },
                {
                  "expression": {
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1595:11:3",
                    "subExpression": {
                      "id": 156,
                      "name": "gameCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1595:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "1595:11:3"
                },
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 159,
                        "name": "games",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "1616:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$31_storage_$",
                          "typeString": "mapping(uint256 => struct BettingGame.Game storage ref)"
                        }
                      },
                      "id": 161,
                      "indexExpression": {
                        "id": 160,
                        "name": "gameCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1622:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1616:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$31_storage",
                        "typeString": "struct BettingGame.Game storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 163,
                          "name": "gameCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "1640:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 164,
                          "name": "_head",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1651:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 165,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1658:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1658:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 169,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1677:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1677:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1669:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 167,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1669:8:3",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 162,
                        "name": "Game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1635:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Game_$31_storage_ptr_$",
                          "typeString": "type(struct BettingGame.Game storage pointer)"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1635:54:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                        "typeString": "struct BettingGame.Game memory"
                      }
                    },
                    "src": "1616:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Game_$31_storage",
                      "typeString": "struct BettingGame.Game storage ref"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:73:3"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "1708:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 194,
                      "src": "1700:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1700:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "keyhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1738:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 179,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "1747:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 177,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "1720:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1700:51:3"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 182,
                        "name": "requestIdToGameIdMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "1761:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 184,
                      "indexExpression": {
                        "id": 183,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "1786:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1761:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 185,
                      "name": "gameCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1799:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1761:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:47:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "1844:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 188,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1824:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "1819:35:3"
                },
                {
                  "expression": {
                    "id": 192,
                    "name": "gameCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13,
                    "src": "1872:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 193,
                  "nodeType": "Return",
                  "src": "1865:16:3"
                }
              ]
            },
            "functionSelector": "c23c87d5",
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "play",
            "nameLocation": "1249:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_head",
                  "nameLocation": "1259:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "1254:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:12:3"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "1290:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1289:9:3"
            },
            "scope": 308,
            "src": "1240:648:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              323
            ],
            "body": {
              "id": 258,
              "nodeType": "Block",
              "src": "1980:463:3",
              "statements": [
                {
                  "assignments": [
                    204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "head",
                      "nameLocation": "2062:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "2057:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2057:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 210,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 205,
                        "name": "_randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2069:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2069:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2088:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2069:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2057:32:3"
                },
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "gameId",
                      "nameLocation": "2108:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "2100:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2100:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 216,
                  "initialValue": {
                    "baseExpression": {
                      "id": 213,
                      "name": "requestIdToGameIdMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2117:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
                    "id": 215,
                    "indexExpression": {
                      "id": 214,
                      "name": "_requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 197,
                      "src": "2142:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2117:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2100:53:3"
                },
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "game",
                      "nameLocation": "2175:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "2163:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                        "typeString": "struct BettingGame.Game"
                      },
                      "typeName": {
                        "id": 218,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 217,
                          "name": "Game",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31,
                          "src": "2163:4:3"
                        },
                        "referencedDeclaration": 31,
                        "src": "2163:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Game_$31_storage_ptr",
                          "typeString": "struct BettingGame.Game"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "baseExpression": {
                      "id": 220,
                      "name": "games",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2182:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$31_storage_$",
                        "typeString": "mapping(uint256 => struct BettingGame.Game storage ref)"
                      }
                    },
                    "id": 222,
                    "indexExpression": {
                      "id": 221,
                      "name": "gameId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2188:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2182:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Game_$31_storage",
                      "typeString": "struct BettingGame.Game storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2163:32:3"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "playerWon",
                      "nameLocation": "2210:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 258,
                      "src": "2205:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2205:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 226,
                      "name": "head",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "2222:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 227,
                        "name": "game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2230:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                          "typeString": "struct BettingGame.Game memory"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "head",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "2230:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2222:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2205:34:3"
                },
                {
                  "condition": {
                    "id": 231,
                    "name": "playerWon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 225,
                    "src": "2254:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 248,
                  "nodeType": "IfStatement",
                  "src": "2250:120:3",
                  "trueBody": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "2265:105:3",
                    "statements": [
                      {
                        "assignments": [
                          233
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 233,
                            "mutability": "mutable",
                            "name": "winAmount",
                            "nameLocation": "2287:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 247,
                            "src": "2279:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 232,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2279:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 238,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2299:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 235,
                              "name": "game",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "2303:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                                "typeString": "struct BettingGame.Game memory"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "2303:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2299:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2279:35:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 244,
                              "name": "winAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "2349:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 239,
                                "name": "game",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "2328:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                                  "typeString": "struct BettingGame.Game memory"
                                }
                              },
                              "id": 242,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "player",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30,
                              "src": "2328:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2328:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2328:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "2328:31:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 250,
                        "name": "gameId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 212,
                        "src": "2392:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 251,
                          "name": "game",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "2400:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                            "typeString": "struct BettingGame.Game memory"
                          }
                        },
                        "id": 252,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "player",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30,
                        "src": "2400:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 253,
                          "name": "game",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "2413:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Game_$31_memory_ptr",
                            "typeString": "struct BettingGame.Game memory"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "2413:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 255,
                        "name": "playerWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "2426:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 249,
                      "name": "Result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "2385:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,uint256,bool)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2385:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "2380:56:3"
                }
              ]
            },
            "id": 259,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "1903:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 201,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1971:8:3"
            },
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "1929:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1921:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "_randomness",
                  "nameLocation": "1949:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "1941:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1941:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:41:3"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1980:0:3"
            },
            "scope": 308,
            "src": "1894:549:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "2506:96:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 269,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2538:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2538:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 271,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "2550:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 267,
                            "name": "LINK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "2524:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$574",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 551,
                          "src": "2524:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2524:33:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a204c494e4b207472616e73666572206661696c6564",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2559:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4af3aada54d03defaac213b3c6a2ca7df069b1803ff15df7cceb65c87a530a",
                          "typeString": "literal_string \"BettingGame: LINK transfer failed\""
                        },
                        "value": "BettingGame: LINK transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4af3aada54d03defaac213b3c6a2ca7df069b1803ff15df7cceb65c87a530a",
                          "typeString": "literal_string \"BettingGame: LINK transfer failed\""
                        }
                      ],
                      "id": 266,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2516:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2516:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "2516:79:3"
                }
              ]
            },
            "functionSelector": "7a8042bd",
            "id": 277,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 264,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 263,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "2496:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2496:9:3"
              }
            ],
            "name": "withdrawLink",
            "nameLocation": "2458:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2479:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 277,
                  "src": "2471:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2470:16:3"
            },
            "returnParameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2506:0:3"
            },
            "scope": 308,
            "src": "2449:153:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "2674:165:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 287,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2700:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BettingGame_$308",
                                  "typeString": "contract BettingGame"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BettingGame_$308",
                                  "typeString": "contract BettingGame"
                                }
                              ],
                              "id": 286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2692:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 285,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2692:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2692:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "2692:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 290,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "2717:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2692:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a20696e73756666696369656e742062616c616e6365",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2725:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e1200441559e04faccb6b5c9205d5bae79e6c57e1a9c5a27a7a1e2ae000ad1",
                          "typeString": "literal_string \"BettingGame: insufficient balance\""
                        },
                        "value": "BettingGame: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e1200441559e04faccb6b5c9205d5bae79e6c57e1a9c5a27a7a1e2ae000ad1",
                          "typeString": "literal_string \"BettingGame: insufficient balance\""
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2684:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2684:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:77:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 298,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2786:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 295,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2771:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2771:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2771:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "2771:22:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 302,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2818:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 303,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "2825:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 301,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2809:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2809:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "EmitStatement",
                  "src": "2804:28:3"
                }
              ]
            },
            "functionSelector": "3bed33ce",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "2664:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2664:9:3"
              }
            ],
            "name": "withdrawEther",
            "nameLocation": "2617:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2639:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2631:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2631:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2630:16:3"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2674:0:3"
            },
            "scope": 308,
            "src": "2608:231:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 309,
        "src": "86:2755:3",
        "usedErrors": []
      }
    ],
    "src": "0:2842:3"
  },
  "bytecode": "60c0604052600060045534801561001557600080fd5b50604051610d49380380610d4983398101604081905261003491610082565b6001600160a01b0393841660a05292909116608052600380546001600160a01b031916331790556001556002556100c5565b80516001600160a01b038116811461007d57600080fd5b919050565b6000806000806080858703121561009857600080fd5b6100a185610066565b93506100af60208601610066565b6040860151606090960151949790965092505050565b60805160a051610c4a6100ff600039600081816104ad01526109360152600081816103d40152818161061b01526109070152610c4a6000f3fe60806040526004361061008a5760003560e01c806369ebe78e1161005957806369ebe78e146101ae5780637a8042bd146101c457806394985ddd146101e4578063c23c87d514610204578063ddca3f431461021757600080fd5b8063117a5b90146100cb5780633bed33ce1461014857806346bd175b1461015d5780634d1975b41461019857600080fd5b366100c65760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b3480156100d757600080fd5b5061011a6100e6366004610a7d565b6005602052600090815260409020805460018201546002830154600390930154919260ff909116916001600160a01b031684565b604080519485529215156020850152918301526001600160a01b031660608201526080015b60405180910390f35b61015b610156366004610a7d565b61022d565b005b34801561016957600080fd5b5061018a610178366004610a7d565b60066020526000908152604090205481565b60405190815260200161013f565b3480156101a457600080fd5b5061018a60045481565b3480156101ba57600080fd5b5061018a60025481565b3480156101d057600080fd5b5061015b6101df366004610a7d565b610364565b3480156101f057600080fd5b5061015b6101ff366004610a96565b6104a2565b61018a610212366004610ac6565b610528565b34801561022357600080fd5b5061018a60015481565b6003546001600160a01b031633146102865760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b60448201526064015b60405180910390fd5b804710156102e05760405162461bcd60e51b815260206004820152602160248201527f42657474696e6747616d653a20696e73756666696369656e742062616c616e636044820152606560f81b606482015260840161027d565b6003546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561031a573d6000803e3d6000fd5b50600354604080516001600160a01b039092168252602082018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150565b6003546001600160a01b031633146103b85760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b604482015260640161027d565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104499190610aea565b61049f5760405162461bcd60e51b815260206004820152602160248201527f42657474696e6747616d653a204c494e4b207472616e73666572206661696c656044820152601960fa1b606482015260840161027d565b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161027d565b61052482826107e3565b5050565b600066038d7ea4c680003410156105995760405162461bcd60e51b815260206004820152602f60248201527f42657474696e6747616d653a206d696e696d756d20616c6c6f7765642062657460448201526e1034b99018171818189032ba3432b960891b606482015260840161027d565b6105a4346002610b1d565b4710156106035760405162461bcd60e51b815260206004820152602760248201527f42657474696e6747616d653a20696e73756666696369656e74207661756c742060448201526662616c616e636560c81b606482015260840161027d565b6001546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190610b3c565b10156106e85760405162461bcd60e51b8152602060048201526024808201527f42657474696e6747616d653a20696e73756666696369656e74204c494e4b207460448201526337b5b2b760e11b606482015260840161027d565b600480549060006106f883610b55565b9091555050604080516080810182526004548082528415156020808401918252348486019081523360608601908152600094855260059092529483209351845590516001808501805460ff19169215159290921790915593516002808501919091559051600390930180546001600160a01b0319166001600160a01b039094169390931790925590549154909161078e91610903565b60045460008281526006602090815260409182902092909255518281529192507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e910160405180910390a15050600454919050565b60006107f0600283610b6e565b6000848152600660209081526040808320548084526005835292819020815160808101835281548152600182015460ff161515938101849052600282015492810192909252600301546001600160a01b0316606082015292159350909190831480156108a9576000826040015160026108699190610b1d565b60608401516040519192506001600160a01b03169082156108fc029083906000818181858888f193505050501580156108a6573d6000803e3d6000fd5b50505b60608281015160408085015181516001600160a01b0390931683526020830152831515828201525185927ff83ba849142075c91a16090145a5ae9453a3db63db6f4d0320e28649ac4316e5928290030190a2505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610973929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016109a093929190610b90565b6020604051808303816000875af11580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e39190610aea565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610a3d906001610bfc565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b600060208284031215610a8f57600080fd5b5035919050565b60008060408385031215610aa957600080fd5b50508035926020909101359150565b801515811461049f57600080fd5b600060208284031215610ad857600080fd5b8135610ae381610ab8565b9392505050565b600060208284031215610afc57600080fd5b8151610ae381610ab8565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b3757610b37610b07565b500290565b600060208284031215610b4e57600080fd5b5051919050565b600060018201610b6757610b67610b07565b5060010190565b600082610b8b57634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610bd257858101830151858201608001528201610bb6565b81811115610be4576000608083870101525b50601f01601f19169290920160800195945050505050565b60008219821115610c0f57610c0f610b07565b50019056fea26469706673582212202f6f8d10002c73e48b3890e3bb53572d60fed5d8d7f3394866de4f2b0997b01b64736f6c634300080f0033",
  "bytecodeSha1": "06aac035d4b1d0ac21993b0affc81ca5e229cdbf",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "BettingGame",
  "coverageMap": {
    "branches": {
      "0": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "27": [
            9668,
            9696,
            true
          ]
        }
      },
      "1": {},
      "3": {
        "BettingGame.play": {
          "24": [
            1316,
            1337,
            true
          ],
          "25": [
            1407,
            1445,
            true
          ],
          "26": [
            1507,
            1543,
            true
          ]
        },
        "BettingGame.withdrawEther": {
          "22": [
            2692,
            2723,
            true
          ]
        },
        "BettingGame.withdrawLink": {
          "23": [
            2524,
            2557,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "5": [
            9660,
            9732
          ],
          "6": [
            9738,
            9778
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "17": [
            7834,
            7921
          ],
          "19": [
            8663,
            8702
          ],
          "21": [
            8708,
            8747
          ]
        }
      },
      "1": {
        "VRFRequestIDBase.makeRequestId": {
          "20": [
            1518,
            1577
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "18": [
            953,
            1031
          ]
        }
      },
      "3": {
        "BettingGame.<receive>": {
          "0": [
            1019,
            1055
          ]
        },
        "BettingGame.fulfillRandomness": {
          "15": [
            2328,
            2359
          ],
          "16": [
            2380,
            2436
          ]
        },
        "BettingGame.play": {
          "7": [
            1308,
            1389
          ],
          "8": [
            1399,
            1489
          ],
          "9": [
            1499,
            1584
          ],
          "10": [
            1595,
            1606
          ],
          "11": [
            1616,
            1689
          ],
          "12": [
            1761,
            1808
          ],
          "13": [
            1819,
            1854
          ],
          "14": [
            1865,
            1881
          ]
        },
        "BettingGame.withdrawEther": {
          "1": [
            2684,
            2761
          ],
          "2": [
            2771,
            2793
          ],
          "3": [
            2804,
            2832
          ]
        },
        "BettingGame.withdrawLink": {
          "4": [
            2516,
            2595
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.4.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.4.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "60806040526004361061008a5760003560e01c806369ebe78e1161005957806369ebe78e146101ae5780637a8042bd146101c457806394985ddd146101e4578063c23c87d514610204578063ddca3f431461021757600080fd5b8063117a5b90146100cb5780633bed33ce1461014857806346bd175b1461015d5780634d1975b41461019857600080fd5b366100c65760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b3480156100d757600080fd5b5061011a6100e6366004610a7d565b6005602052600090815260409020805460018201546002830154600390930154919260ff909116916001600160a01b031684565b604080519485529215156020850152918301526001600160a01b031660608201526080015b60405180910390f35b61015b610156366004610a7d565b61022d565b005b34801561016957600080fd5b5061018a610178366004610a7d565b60066020526000908152604090205481565b60405190815260200161013f565b3480156101a457600080fd5b5061018a60045481565b3480156101ba57600080fd5b5061018a60025481565b3480156101d057600080fd5b5061015b6101df366004610a7d565b610364565b3480156101f057600080fd5b5061015b6101ff366004610a96565b6104a2565b61018a610212366004610ac6565b610528565b34801561022357600080fd5b5061018a60015481565b6003546001600160a01b031633146102865760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b60448201526064015b60405180910390fd5b804710156102e05760405162461bcd60e51b815260206004820152602160248201527f42657474696e6747616d653a20696e73756666696369656e742062616c616e636044820152606560f81b606482015260840161027d565b6003546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561031a573d6000803e3d6000fd5b50600354604080516001600160a01b039092168252602082018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150565b6003546001600160a01b031633146103b85760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b604482015260640161027d565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104499190610aea565b61049f5760405162461bcd60e51b815260206004820152602160248201527f42657474696e6747616d653a204c494e4b207472616e73666572206661696c656044820152601960fa1b606482015260840161027d565b50565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461051a5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640161027d565b61052482826107e3565b5050565b600066038d7ea4c680003410156105995760405162461bcd60e51b815260206004820152602f60248201527f42657474696e6747616d653a206d696e696d756d20616c6c6f7765642062657460448201526e1034b99018171818189032ba3432b960891b606482015260840161027d565b6105a4346002610b1d565b4710156106035760405162461bcd60e51b815260206004820152602760248201527f42657474696e6747616d653a20696e73756666696369656e74207661756c742060448201526662616c616e636560c81b606482015260840161027d565b6001546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e9190610b3c565b10156106e85760405162461bcd60e51b8152602060048201526024808201527f42657474696e6747616d653a20696e73756666696369656e74204c494e4b207460448201526337b5b2b760e11b606482015260840161027d565b600480549060006106f883610b55565b9091555050604080516080810182526004548082528415156020808401918252348486019081523360608601908152600094855260059092529483209351845590516001808501805460ff19169215159290921790915593516002808501919091559051600390930180546001600160a01b0319166001600160a01b039094169390931790925590549154909161078e91610903565b60045460008281526006602090815260409182902092909255518281529192507fe5f5b44d72d4143c278eb745c4acc0695c4a5bc616be5beecf46abe29661780e910160405180910390a15050600454919050565b60006107f0600283610b6e565b6000848152600660209081526040808320548084526005835292819020815160808101835281548152600182015460ff161515938101849052600282015492810192909252600301546001600160a01b0316606082015292159350909190831480156108a9576000826040015160026108699190610b1d565b60608401516040519192506001600160a01b03169082156108fc029083906000818181858888f193505050501580156108a6573d6000803e3d6000fd5b50505b60608281015160408085015181516001600160a01b0390931683526020830152831515828201525185927ff83ba849142075c91a16090145a5ae9453a3db63db6f4d0320e28649ac4316e5928290030190a2505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610973929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016109a093929190610b90565b6020604051808303816000875af11580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e39190610aea565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a090910190925281519183019190912086845292909152610a3d906001610bfc565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b600060208284031215610a8f57600080fd5b5035919050565b60008060408385031215610aa957600080fd5b50508035926020909101359150565b801515811461049f57600080fd5b600060208284031215610ad857600080fd5b8135610ae381610ab8565b9392505050565b600060208284031215610afc57600080fd5b8151610ae381610ab8565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610b3757610b37610b07565b500290565b600060208284031215610b4e57600080fd5b5051919050565b600060018201610b6757610b67610b07565b5060010190565b600082610b8b57634e487b7160e01b600052601260045260246000fd5b500690565b60018060a01b038416815260006020848184015260606040840152835180606085015260005b81811015610bd257858101830151858201608001528201610bb6565b81811115610be4576000608083870101525b50601f01601f19169290920160800195945050505050565b60008219821115610c0f57610c0f610b07565b50019056fea26469706673582212202f6f8d10002c73e48b3890e3bb53572d60fed5d8d7f3394866de4f2b0997b01b64736f6c634300080f0033",
  "deployedSourceMap": "86:2755:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:31;;1045:9;160:25:4;;1033:10:3;;1024:31;;148:2:4;133:18;1024:31:3;;;;;;;86:2755;;;;;247:37;;;;;;;;;;-1:-1:-1;247:37:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;247:37:3;;;;;;;622:25:4;;;690:14;;683:22;678:2;663:18;;656:50;722:18;;;715:34;-1:-1:-1;;;;;785:32:4;780:2;765:18;;758:60;609:3;594:19;247:37:3;;;;;;;;2608:231;;;;;;:::i;:::-;;:::i;:::-;;290:59;;;;;;;;;;-1:-1:-1;290:59:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;160:25:4;;;148:2;133:18;290:59:3;14:177:4;213:28:3;;;;;;;;;;;;;;;;157:22;;;;;;;;;;;;;;;;2449:153;;;;;;;;;;-1:-1:-1;2449:153:3;;;;;:::i;:::-;;:::i;9576:207:0:-;;;;;;;;;;-1:-1:-1;9576:207:0;;;;;:::i;:::-;;:::i;1240:648:3:-;;;;;;:::i;:::-;;:::i;133:18::-;;;;;;;;;;;;;;;;2608:231;1121:5;;-1:-1:-1;;;;;1121:5:3;1107:10;:19;1099:55;;;;-1:-1:-1;;;1099:55:3;;2020:2:4;1099:55:3;;;2002:21:4;2059:2;2039:18;;;2032:30;-1:-1:-1;;;2078:18:4;;;2071:53;2141:18;;1099:55:3;;;;;;;;;2717:6:::1;2692:21;:31;;2684:77;;;::::0;-1:-1:-1;;;2684:77:3;;2372:2:4;2684:77:3::1;::::0;::::1;2354:21:4::0;2411:2;2391:18;;;2384:30;2450:34;2430:18;;;2423:62;-1:-1:-1;;;2501:18:4;;;2494:31;2542:19;;2684:77:3::1;2170:397:4::0;2684:77:3::1;2771:5;::::0;:22:::1;::::0;-1:-1:-1;;;;;2771:5:3;;::::1;::::0;:22;::::1;;;::::0;2786:6;;2771:5:::1;:22:::0;:5;:22;2786:6;2771:5;:22;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2818:5:3::1;::::0;2809:23:::1;::::0;;-1:-1:-1;;;;;2818:5:3;;::::1;2754:51:4::0;;2836:2;2821:18;;2814:34;;;2809:23:3::1;::::0;2727:18:4;2809:23:3::1;;;;;;;2608:231:::0;:::o;2449:153::-;1121:5;;-1:-1:-1;;;;;1121:5:3;1107:10;:19;1099:55;;;;-1:-1:-1;;;1099:55:3;;2020:2:4;1099:55:3;;;2002:21:4;2059:2;2039:18;;;2032:30;-1:-1:-1;;;2078:18:4;;;2071:53;2141:18;;1099:55:3;1818:347:4;1099:55:3;2524:33:::1;::::0;-1:-1:-1;;;2524:33:3;;2538:10:::1;2524:33;::::0;::::1;2754:51:4::0;2821:18;;;2814:34;;;2524:4:3::1;-1:-1:-1::0;;;;;2524:13:3::1;::::0;::::1;::::0;2727:18:4;;2524:33:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2516:79;;;::::0;-1:-1:-1;;;2516:79:3;;3590:2:4;2516:79:3::1;::::0;::::1;3572:21:4::0;3629:2;3609:18;;;3602:30;3668:34;3648:18;;;3641:62;-1:-1:-1;;;3719:18:4;;;3712:31;3760:19;;2516:79:3::1;3388:397:4::0;2516:79:3::1;2449:153:::0;:::o;9576:207:0:-;9668:10;-1:-1:-1;;;;;9682:14:0;9668:28;;9660:72;;;;-1:-1:-1;;;9660:72:0;;3992:2:4;9660:72:0;;;3974:21:4;4031:2;4011:18;;;4004:30;4070:33;4050:18;;;4043:61;4121:18;;9660:72:0;3790:355:4;9660:72:0;9738:40;9756:9;9767:10;9738:17;:40::i;:::-;9576:207;;:::o;1240:648:3:-;1290:7;1329:8;1316:9;:21;;1308:81;;;;-1:-1:-1;;;1308:81:3;;4352:2:4;1308:81:3;;;4334:21:4;4391:2;4371:18;;;4364:30;4430:34;4410:18;;;4403:62;-1:-1:-1;;;4481:18:4;;;4474:45;4536:19;;1308:81:3;4150:411:4;1308:81:3;1432:13;1436:9;1432:1;:13;:::i;:::-;1407:21;:38;;1399:90;;;;-1:-1:-1;;;1399:90:3;;5073:2:4;1399:90:3;;;5055:21:4;5112:2;5092:18;;;5085:30;5151:34;5131:18;;;5124:62;-1:-1:-1;;;5202:18:4;;;5195:37;5249:19;;1399:90:3;4871:403:4;1399:90:3;1540:3;;1507:29;;-1:-1:-1;;;1507:29:3;;1530:4;1507:29;;;5425:51:4;1507:4:3;-1:-1:-1;;;;;1507:14:3;;;;5398:18:4;;1507:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;1499:85;;;;-1:-1:-1;;;1499:85:3;;5878:2:4;1499:85:3;;;5860:21:4;5917:2;5897:18;;;5890:30;5956:34;5936:18;;;5929:62;-1:-1:-1;;;6007:18:4;;;6000:34;6051:19;;1499:85:3;5676:400:4;1499:85:3;1595:9;:11;;;:9;:11;;;:::i;:::-;;;;-1:-1:-1;;1635:54:3;;;;;;;;1640:9;;1635:54;;;;;;;;;;;;;1658:9;1635:54;;;;;;1677:10;1635:54;;;;;;-1:-1:-1;1616:16:3;;;:5;:16;;;;;;:73;;;;;;;;;;;;-1:-1:-1;;1616:73:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1616:73:3;-1:-1:-1;;;;;1616:73:3;;;;;;;;;;1738:7;;1747:3;;-1:-1:-1;;1720:31:3;;:17;:31::i;:::-;1799:9;;1761:35;;;;:24;:35;;;;;;;;;:47;;;;1824:30;160:25:4;;;1761:35:3;;-1:-1:-1;1824:30:3;;133:18:4;1824:30:3;;;;;;;-1:-1:-1;;1872:9:3;;;1240:648;-1:-1:-1;1240:648:3:o;1894:549::-;2057:9;2069:15;2083:1;2069:11;:15;:::i;:::-;2088:1;2117:36;;;:24;:36;;;;;;;;;2182:13;;;:5;:13;;;;;;2163:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2163:32:3;;;;;2069:20;;;-1:-1:-1;2117:36:3;;2163:32;2222:17;;2250:120;;;;2279:17;2303:4;:11;;;2299:1;:15;;;;:::i;:::-;2328:11;;;;:31;;2279:35;;-1:-1:-1;;;;;;2328:20:3;;:31;;;;;2279:35;;2328:31;;;;2279:35;2328:20;:31;;;;;;;;;;;;;;;;;;;;;2265:105;2250:120;2400:11;;;;;2413;;;;;2385:51;;-1:-1:-1;;;;;6657:32:4;;;6639:51;;6721:2;6706:18;;6699:34;6776:14;;6769:22;6749:18;;;6742:50;2385:51:3;2392:6;;2385:51;;;;;;;;1980:463;;;;1894:549;;:::o;7732:1020:0:-;7809:17;7834:4;-1:-1:-1;;;;;7834:20:0;;7855:14;7871:4;7888:8;6589:1;7877:43;;;;;;;;6977:25:4;;;7033:2;7018:18;;7011:34;6965:2;6950:18;;6803:248;7877:43:0;;;;;;;;;;;;;7834:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8152:15:0;8235:16;;;;;;;;;;;;978:51:1;;;;;8191:25:4;;;8232:18;;;8225:34;;;8228:4:0;8275:18:4;;;8268:60;8344:18;;;;8337:34;;;978:51:1;;;;;;;;;;8163:19:4;;;;978:51:1;;;968:62;;;;;;;;;8682:16:0;;;;;;;:20;;8701:1;8682:20;:::i;:::-;8663:6;:16;;;;;;;;;;;;:39;;;;1535:41:1;;;;;8539:19:4;;;8574:12;;;8567:28;;;1535:41:1;;;;;;;;;8611:12:4;;;;1535:41:1;;;1525:52;;;;;8708:39:0;7732:1020;-1:-1:-1;;;;7732:1020:0:o;196:180:4:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:4;;196:180;-1:-1:-1;196:180:4:o;1196:248::-;1264:6;1272;1325:2;1313:9;1304:7;1300:23;1296:32;1293:52;;;1341:1;1338;1331:12;1293:52;-1:-1:-1;;1364:23:4;;;1434:2;1419:18;;;1406:32;;-1:-1:-1;1196:248:4:o;1449:118::-;1535:5;1528:13;1521:21;1514:5;1511:32;1501:60;;1557:1;1554;1547:12;1572:241;1628:6;1681:2;1669:9;1660:7;1656:23;1652:32;1649:52;;;1697:1;1694;1687:12;1649:52;1736:9;1723:23;1755:28;1777:5;1755:28;:::i;:::-;1802:5;1572:241;-1:-1:-1;;;1572:241:4:o;3138:245::-;3205:6;3258:2;3246:9;3237:7;3233:23;3229:32;3226:52;;;3274:1;3271;3264:12;3226:52;3306:9;3300:16;3325:28;3347:5;3325:28;:::i;4566:127::-;4627:10;4622:3;4618:20;4615:1;4608:31;4658:4;4655:1;4648:15;4682:4;4679:1;4672:15;4698:168;4738:7;4804:1;4800;4796:6;4792:14;4789:1;4786:21;4781:1;4774:9;4767:17;4763:45;4760:71;;;4811:18;;:::i;:::-;-1:-1:-1;4851:9:4;;4698:168::o;5487:184::-;5557:6;5610:2;5598:9;5589:7;5585:23;5581:32;5578:52;;;5626:1;5623;5616:12;5578:52;-1:-1:-1;5649:16:4;;5487:184;-1:-1:-1;5487:184:4:o;6081:135::-;6120:3;6141:17;;;6138:43;;6161:18;;:::i;:::-;-1:-1:-1;6208:1:4;6197:13;;6081:135::o;6221:209::-;6253:1;6279;6269:132;;6323:10;6318:3;6314:20;6311:1;6304:31;6358:4;6355:1;6348:15;6386:4;6383:1;6376:15;6269:132;-1:-1:-1;6415:9:4;;6221:209::o;7056:766::-;7288:1;7284;7279:3;7275:11;7271:19;7263:6;7259:32;7248:9;7241:51;7222:4;7311:2;7349:6;7344:2;7333:9;7329:18;7322:34;7392:2;7387;7376:9;7372:18;7365:30;7424:6;7418:13;7467:6;7462:2;7451:9;7447:18;7440:34;7492:1;7502:141;7516:6;7513:1;7510:13;7502:141;;;7612:14;;;7608:23;;7602:30;7577:17;;;7596:3;7573:27;7566:67;7531:10;;7502:141;;;7661:6;7658:1;7655:13;7652:92;;;7732:1;7726:3;7717:6;7706:9;7702:22;7698:32;7691:43;7652:92;-1:-1:-1;7805:2:4;7784:15;-1:-1:-1;;7780:29:4;7765:45;;;;7812:3;7761:55;;7056:766;-1:-1:-1;;;;;7056:766:4:o;7827:128::-;7867:3;7898:1;7894:6;7891:1;7888:13;7885:39;;;7904:18;;:::i;:::-;-1:-1:-1;7940:9:4;;7827:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    86,
    2841
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69EBE78E GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x69EBE78E EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7A8042BD EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xC23C87D5 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x117A5B90 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x46BD175B EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x4D1975B4 EQ PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0xC6 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11A PUSH2 0xE6 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x22D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x1DF CALLDATASIZE PUSH1 0x4 PUSH2 0xA7D JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x286 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x31B0B63632B91034B9903737BA103A34329030B236B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A20696E73756666696369656E742062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x31B0B63632B91034B9903737BA103A34329030B236B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x425 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x49F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A204C494E4B207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x524 DUP3 DUP3 PUSH2 0x7E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A206D696E696D756D20616C6C6F77656420626574 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x1034B99018171818189032BA3432B9 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH2 0x5A4 CALLVALUE PUSH1 0x2 PUSH2 0xB1D JUMP JUMPDEST SELFBALANCE LT ISZERO PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A20696E73756666696369656E74207661756C7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST LT ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A20696E73756666696369656E74204C494E4B2074 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x37B5B2B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x6F8 DUP4 PUSH2 0xB55 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SLOAD DUP1 DUP3 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE CALLVALUE DUP5 DUP7 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP5 DUP4 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 SLOAD SWAP2 SLOAD SWAP1 SWAP2 PUSH2 0x78E SWAP2 PUSH2 0x903 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE MLOAD DUP3 DUP2 MSTORE SWAP2 SWAP3 POP PUSH32 0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x4 SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F0 PUSH1 0x2 DUP4 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP1 DUP5 MSTORE PUSH1 0x5 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE SWAP3 ISZERO SWAP4 POP SWAP1 SWAP2 SWAP1 DUP4 EQ DUP1 ISZERO PUSH2 0x8A9 JUMPI PUSH1 0x0 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x2 PUSH2 0x869 SWAP2 SWAP1 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x40 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x60 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE DUP4 ISZERO ISZERO DUP3 DUP3 ADD MSTORE MLOAD DUP6 SWAP3 PUSH32 0xF83BA849142075C91A16090145A5AE9453A3DB63DB6F4D0320E28649AC4316E5 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x973 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB90 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E3 SWAP2 SWAP1 PUSH2 0xAEA JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP9 SWAP1 MSTORE DUP1 DUP4 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP7 DUP5 MSTORE SWAP3 SWAP1 SWAP2 MSTORE PUSH2 0xA3D SWAP1 PUSH1 0x1 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP3 SUB DUP4 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xAE3 DUP2 PUSH2 0xAB8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xAE3 DUP2 PUSH2 0xAB8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB37 PUSH2 0xB07 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xB67 JUMPI PUSH2 0xB67 PUSH2 0xB07 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB8B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 DUP2 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP4 MLOAD DUP1 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBD2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x80 ADD MSTORE DUP3 ADD PUSH2 0xBB6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBE4 JUMPI PUSH1 0x0 PUSH1 0x80 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x80 ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC0F JUMPI PUSH2 0xC0F PUSH2 0xB07 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH16 0x8D10002C73E48B3890E3BB53572D60FE 0xD5 0xD8 0xD7 RETURN CODECOPY BASEFEE PUSH7 0xDE4F2B0997B01B PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A"
    },
    "12": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x69EBE78E"
    },
    "25": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x69EBE78E"
    },
    "36": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AE"
    },
    "40": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7A8042BD"
    },
    "47": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C4"
    },
    "51": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x94985DDD"
    },
    "58": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E4"
    },
    "62": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC23C87D5"
    },
    "69": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x204"
    },
    "73": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDDCA3F43"
    },
    "80": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x217"
    },
    "84": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "REVERT",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x117A5B90"
    },
    "96": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB"
    },
    "100": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3BED33CE"
    },
    "107": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x148"
    },
    "111": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x46BD175B"
    },
    "118": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "122": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x4D1975B4"
    },
    "129": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x198"
    },
    "133": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "REVERT",
      "path": "3"
    },
    "138": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC6"
    },
    "143": {
      "fn": null,
      "offset": [
        86,
        2841
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "144": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x40"
    },
    "146": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "147": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1045,
        1054
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "148": {
      "op": "DUP2"
    },
    "149": {
      "op": "MSTORE"
    },
    "150": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1033,
        1043
      ],
      "op": "CALLER",
      "path": "3"
    },
    "151": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1033,
        1043
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "152": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "185": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "188": {
      "op": "ADD"
    },
    "189": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "191": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "192": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "DUP1",
      "path": "3"
    },
    "193": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "194": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "SUB",
      "path": "3"
    },
    "195": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "196": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1024,
        1055
      ],
      "op": "LOG2",
      "path": "3"
    },
    "197": {
      "offset": [
        86,
        2841
      ],
      "op": "STOP",
      "path": "3"
    },
    "198": {
      "fn": "BettingGame.<receive>",
      "offset": [
        86,
        2841
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "199": {
      "fn": "BettingGame.<receive>",
      "offset": [
        86,
        2841
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "201": {
      "fn": "BettingGame.<receive>",
      "offset": [
        86,
        2841
      ],
      "op": "DUP1",
      "path": "3"
    },
    "202": {
      "first_revert": true,
      "fn": "BettingGame.<receive>",
      "offset": [
        86,
        2841
      ],
      "op": "REVERT",
      "path": "3"
    },
    "203": {
      "offset": [
        247,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "204": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "205": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "206": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "207": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD7"
    },
    "210": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "211": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "213": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "214": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "REVERT",
      "path": "3"
    },
    "215": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "216": {
      "op": "POP"
    },
    "217": {
      "offset": [
        247,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A"
    },
    "220": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6"
    },
    "223": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "224": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "226": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7D"
    },
    "229": {
      "fn": "BettingGame.<receive>",
      "jump": "i",
      "offset": [
        247,
        284
      ],
      "op": "JUMP",
      "path": "3"
    },
    "230": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "231": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "233": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "235": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "236": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "238": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "239": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP2",
      "path": "3"
    },
    "240": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "241": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "243": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "244": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "245": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "247": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "249": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP3",
      "path": "3"
    },
    "250": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "ADD",
      "path": "3"
    },
    "251": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "252": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "254": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP4",
      "path": "3"
    },
    "255": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "ADD",
      "path": "3"
    },
    "256": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "257": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "259": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "260": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "261": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "ADD",
      "path": "3"
    },
    "262": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "263": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "264": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "265": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "267": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "268": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "269": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "AND",
      "path": "3"
    },
    "270": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "277": {
      "op": "SHL"
    },
    "278": {
      "op": "SUB"
    },
    "279": {
      "offset": [
        247,
        284
      ],
      "op": "AND",
      "path": "3"
    },
    "280": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP5",
      "path": "3"
    },
    "281": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "JUMP",
      "path": "3"
    },
    "282": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "283": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "285": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "286": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "287": {
      "op": "SWAP5"
    },
    "288": {
      "op": "DUP6"
    },
    "289": {
      "op": "MSTORE"
    },
    "290": {
      "op": "SWAP3"
    },
    "291": {
      "op": "ISZERO"
    },
    "292": {
      "op": "ISZERO"
    },
    "293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "295": {
      "op": "DUP6"
    },
    "296": {
      "op": "ADD"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "SWAP2"
    },
    "299": {
      "op": "DUP4"
    },
    "300": {
      "op": "ADD"
    },
    "301": {
      "op": "MSTORE"
    },
    "302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "308": {
      "op": "SHL"
    },
    "309": {
      "op": "SUB"
    },
    "310": {
      "op": "AND"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "313": {
      "op": "DUP3"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        247,
        284
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "320": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "322": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "323": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "DUP1",
      "path": "3"
    },
    "324": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "325": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SUB",
      "path": "3"
    },
    "326": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "327": {
      "fn": "BettingGame.<receive>",
      "offset": [
        247,
        284
      ],
      "op": "RETURN",
      "path": "3"
    },
    "328": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "329": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15B"
    },
    "332": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x156"
    },
    "335": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "336": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "338": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7D"
    },
    "341": {
      "fn": "BettingGame.withdrawEther",
      "jump": "i",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "342": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "343": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D"
    },
    "346": {
      "fn": "BettingGame.withdrawEther",
      "jump": "i",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "347": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "348": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "STOP",
      "path": "3"
    },
    "349": {
      "offset": [
        290,
        349
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "350": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "351": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "DUP1",
      "path": "3"
    },
    "352": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "353": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x169"
    },
    "356": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "357": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "359": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "DUP1",
      "path": "3"
    },
    "360": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "REVERT",
      "path": "3"
    },
    "361": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "362": {
      "op": "POP"
    },
    "363": {
      "offset": [
        290,
        349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "366": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x178"
    },
    "369": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "370": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "372": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7D"
    },
    "375": {
      "fn": "BettingGame.withdrawEther",
      "jump": "i",
      "offset": [
        290,
        349
      ],
      "op": "JUMP",
      "path": "3"
    },
    "376": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "377": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "379": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "381": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "382": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "384": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "385": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "DUP2",
      "path": "3"
    },
    "386": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "387": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "389": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "390": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "391": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "392": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "DUP2",
      "path": "3"
    },
    "393": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "JUMP",
      "path": "3"
    },
    "394": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "395": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "397": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        290,
        349
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "398": {
      "op": "SWAP1"
    },
    "399": {
      "op": "DUP2"
    },
    "400": {
      "op": "MSTORE"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "403": {
      "op": "ADD"
    },
    "404": {
      "offset": [
        290,
        349
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F"
    },
    "407": {
      "op": "JUMP"
    },
    "408": {
      "offset": [
        213,
        241
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "409": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "410": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "DUP1",
      "path": "3"
    },
    "411": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "412": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A4"
    },
    "415": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "416": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "418": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "DUP1",
      "path": "3"
    },
    "419": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "REVERT",
      "path": "3"
    },
    "420": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "421": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "POP",
      "path": "3"
    },
    "422": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "425": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "427": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "428": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "DUP2",
      "path": "3"
    },
    "429": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        213,
        241
      ],
      "op": "JUMP",
      "path": "3"
    },
    "430": {
      "offset": [
        157,
        179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "431": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "432": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "DUP1",
      "path": "3"
    },
    "433": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "434": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BA"
    },
    "437": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "438": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "440": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "DUP1",
      "path": "3"
    },
    "441": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "REVERT",
      "path": "3"
    },
    "442": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "443": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "POP",
      "path": "3"
    },
    "444": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "447": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "449": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "450": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "DUP2",
      "path": "3"
    },
    "451": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        157,
        179
      ],
      "op": "JUMP",
      "path": "3"
    },
    "452": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "453": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "454": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "455": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "456": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D0"
    },
    "459": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "460": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "462": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "DUP1",
      "path": "3"
    },
    "463": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "REVERT",
      "path": "3"
    },
    "464": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15B"
    },
    "469": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DF"
    },
    "472": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "473": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "475": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7D"
    },
    "478": {
      "fn": "BettingGame.withdrawLink",
      "jump": "i",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "479": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "480": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x364"
    },
    "483": {
      "fn": "BettingGame.withdrawLink",
      "jump": "i",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "484": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "485": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "486": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "487": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "488": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0"
    },
    "491": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "492": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "494": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "495": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "REVERT",
      "path": "0"
    },
    "496": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "op": "POP"
    },
    "498": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15B"
    },
    "501": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FF"
    },
    "504": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "505": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "507": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA96"
    },
    "510": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "511": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "512": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A2"
    },
    "515": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "516": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "517": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "520": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "523": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "524": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "526": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAC6"
    },
    "529": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1240,
        1888
      ],
      "op": "JUMP",
      "path": "3"
    },
    "530": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "531": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x528"
    },
    "534": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1240,
        1888
      ],
      "op": "JUMP",
      "path": "3"
    },
    "535": {
      "offset": [
        133,
        151
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "536": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "537": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "DUP1",
      "path": "3"
    },
    "538": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "539": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x223"
    },
    "542": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "543": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "545": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "DUP1",
      "path": "3"
    },
    "546": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "REVERT",
      "path": "3"
    },
    "547": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "548": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "POP",
      "path": "3"
    },
    "549": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "552": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "554": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "555": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "DUP2",
      "path": "3"
    },
    "556": {
      "fn": "BettingGame.play",
      "offset": [
        133,
        151
      ],
      "op": "JUMP",
      "path": "3"
    },
    "557": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "558": {
      "offset": [
        1121,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "560": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1121,
        1126
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "567": {
      "op": "SHL"
    },
    "568": {
      "op": "SUB"
    },
    "569": {
      "offset": [
        1121,
        1126
      ],
      "op": "AND",
      "path": "3"
    },
    "570": {
      "offset": [
        1107,
        1117
      ],
      "op": "CALLER",
      "path": "3"
    },
    "571": {
      "offset": [
        1107,
        1126
      ],
      "op": "EQ",
      "path": "3"
    },
    "572": {
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286"
    },
    "575": {
      "offset": [
        1099,
        1154
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "576": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "578": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "579": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "583": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "offset": [
        1099,
        1154
      ],
      "op": "DUP2",
      "path": "3"
    },
    "587": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "590": {
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "592": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "DUP3",
      "path": "3"
    },
    "593": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "ADD",
      "path": "3"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "599": {
      "op": "DUP3"
    },
    "600": {
      "op": "ADD"
    },
    "601": {
      "op": "MSTORE"
    },
    "602": {
      "op": "PUSH23",
      "value": "0x31B0B63632B91034B9903737BA103A34329030B236B4B7"
    },
    "626": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "628": {
      "op": "SHL"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "631": {
      "op": "DUP3"
    },
    "632": {
      "op": "ADD"
    },
    "633": {
      "op": "MSTORE"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "636": {
      "op": "ADD"
    },
    "637": {
      "offset": [
        1099,
        1154
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "638": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "640": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "641": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "DUP1",
      "path": "3"
    },
    "642": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "643": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "SUB",
      "path": "3"
    },
    "644": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "645": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "646": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1099,
        1154
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "647": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2717,
        2723
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 1
    },
    "648": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2692,
        2713
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "649": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2692,
        2723
      ],
      "op": "LT",
      "path": "3"
    },
    "650": {
      "branch": 22,
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2692,
        2723
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "651": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E0"
    },
    "654": {
      "branch": 22,
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "655": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "657": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "658": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "662": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "664": {
      "op": "SHL"
    },
    "665": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "DUP2",
      "path": "3"
    },
    "666": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "669": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "671": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "DUP3",
      "path": "3"
    },
    "672": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "ADD",
      "path": "3"
    },
    "673": {
      "op": "MSTORE"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "678": {
      "op": "DUP3"
    },
    "679": {
      "op": "ADD"
    },
    "680": {
      "op": "MSTORE"
    },
    "681": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A20696E73756666696369656E742062616C616E63"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "716": {
      "op": "DUP3"
    },
    "717": {
      "op": "ADD"
    },
    "718": {
      "op": "MSTORE"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "726": {
      "op": "DUP3"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "735": {
      "op": "JUMP"
    },
    "736": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2684,
        2761
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "737": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x3"
    },
    "739": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "740": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "742": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "749": {
      "op": "SHL"
    },
    "750": {
      "op": "SUB"
    },
    "751": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "752": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "753": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "AND",
      "path": "3"
    },
    "754": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "755": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP3",
      "path": "3"
    },
    "756": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "757": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "760": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "MUL",
      "path": "3"
    },
    "761": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "762": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2786,
        2792
      ],
      "op": "DUP4",
      "path": "3"
    },
    "763": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2786,
        2792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "764": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "766": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP2",
      "path": "3"
    },
    "767": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "DUP2",
      "path": "3"
    },
    "768": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP2",
      "path": "3"
    },
    "769": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2786,
        2792
      ],
      "op": "DUP6",
      "path": "3"
    },
    "770": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2776
      ],
      "op": "DUP9",
      "path": "3"
    },
    "771": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP9",
      "path": "3"
    },
    "772": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "CALL",
      "path": "3"
    },
    "773": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "774": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "POP",
      "path": "3"
    },
    "775": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "POP",
      "path": "3"
    },
    "776": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "POP",
      "path": "3"
    },
    "777": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "POP",
      "path": "3"
    },
    "778": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "779": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP1",
      "path": "3"
    },
    "780": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "781": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31A"
    },
    "784": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "785": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "786": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "788": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "DUP1",
      "path": "3"
    },
    "789": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "790": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "791": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "793": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "REVERT",
      "path": "3"
    },
    "794": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2771,
        2793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2818,
        2823
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x3"
    },
    "798": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2818,
        2823
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "799": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "801": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "DUP1",
      "path": "3"
    },
    "802": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2818,
        2823
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "812": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2818,
        2823
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "813": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2818,
        2823
      ],
      "op": "AND",
      "path": "3"
    },
    "814": {
      "op": "DUP3"
    },
    "815": {
      "op": "MSTORE"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "818": {
      "op": "DUP3"
    },
    "819": {
      "op": "ADD"
    },
    "820": {
      "op": "DUP4"
    },
    "821": {
      "op": "SWAP1"
    },
    "822": {
      "op": "MSTORE"
    },
    "823": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "856": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "857": {
      "op": "ADD"
    },
    "858": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "860": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "861": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "DUP1",
      "path": "3"
    },
    "862": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "863": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "SUB",
      "path": "3"
    },
    "864": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "865": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2809,
        2832
      ],
      "op": "LOG1",
      "path": "3"
    },
    "866": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        2608,
        2839
      ],
      "op": "POP",
      "path": "3"
    },
    "867": {
      "fn": "BettingGame.withdrawEther",
      "jump": "o",
      "offset": [
        2608,
        2839
      ],
      "op": "JUMP",
      "path": "3"
    },
    "868": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "869": {
      "offset": [
        1121,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "871": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        1121,
        1126
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "op": "SUB"
    },
    "880": {
      "offset": [
        1121,
        1126
      ],
      "op": "AND",
      "path": "3"
    },
    "881": {
      "offset": [
        1107,
        1117
      ],
      "op": "CALLER",
      "path": "3"
    },
    "882": {
      "offset": [
        1107,
        1126
      ],
      "op": "EQ",
      "path": "3"
    },
    "883": {
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B8"
    },
    "886": {
      "offset": [
        1099,
        1154
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "887": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "889": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        1099,
        1154
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "896": {
      "op": "SHL"
    },
    "897": {
      "offset": [
        1099,
        1154
      ],
      "op": "DUP2",
      "path": "3"
    },
    "898": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        1099,
        1154
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "901": {
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "903": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        1099,
        1154
      ],
      "op": "DUP3",
      "path": "3"
    },
    "904": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        1099,
        1154
      ],
      "op": "ADD",
      "path": "3"
    },
    "905": {
      "op": "MSTORE"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "910": {
      "op": "DUP3"
    },
    "911": {
      "op": "ADD"
    },
    "912": {
      "op": "MSTORE"
    },
    "913": {
      "op": "PUSH23",
      "value": "0x31B0B63632B91034B9903737BA103A34329030B236B4B7"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "939": {
      "op": "SHL"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "942": {
      "op": "DUP3"
    },
    "943": {
      "op": "ADD"
    },
    "944": {
      "op": "MSTORE"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "offset": [
        1099,
        1154
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "951": {
      "op": "JUMP"
    },
    "952": {
      "offset": [
        1099,
        1154
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "953": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x40"
    },
    "955": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "956": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "961": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP2",
      "path": "3"
    },
    "965": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "966": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2538,
        2548
      ],
      "op": "CALLER",
      "path": "3"
    },
    "967": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "969": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP3",
      "path": "3"
    },
    "970": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "ADD",
      "path": "3"
    },
    "971": {
      "op": "MSTORE"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "974": {
      "op": "DUP2"
    },
    "975": {
      "op": "ADD"
    },
    "976": {
      "op": "DUP3"
    },
    "977": {
      "op": "SWAP1"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2528
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2537
      ],
      "op": "AND",
      "path": "3"
    },
    "1021": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1022": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2537
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "1027": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2537
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1030": {
      "op": "ADD"
    },
    "1031": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1033": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1035": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1036": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1037": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1038": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "SUB",
      "path": "3"
    },
    "1039": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1040": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1042": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1043": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "GAS",
      "path": "3"
    },
    "1044": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "CALL",
      "path": "3"
    },
    "1045": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1046": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1047": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1048": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x425"
    },
    "1051": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1052": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1053": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1055": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1056": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1057": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1058": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1060": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1061": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1062": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "POP",
      "path": "3"
    },
    "1063": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "POP",
      "path": "3"
    },
    "1064": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "POP",
      "path": "3"
    },
    "1065": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "POP",
      "path": "3"
    },
    "1066": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1068": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1069": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1070": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1072": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "NOT",
      "path": "3"
    },
    "1073": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1075": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1076": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "ADD",
      "path": "3"
    },
    "1077": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "AND",
      "path": "3"
    },
    "1078": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1079": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "ADD",
      "path": "3"
    },
    "1080": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1081": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1083": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1084": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "POP",
      "path": "3"
    },
    "1085": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1086": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "ADD",
      "path": "3"
    },
    "1087": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1088": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x449"
    },
    "1091": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1092": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1093": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAEA"
    },
    "1096": {
      "fn": "BettingGame.withdrawLink",
      "jump": "i",
      "offset": [
        2524,
        2557
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1097": {
      "branch": 23,
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2524,
        2557
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1098": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x49F"
    },
    "1101": {
      "branch": 23,
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1102": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1104": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1113": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1116": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1118": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1119": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "ADD",
      "path": "3"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "op": "MSTORE"
    },
    "1128": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A204C494E4B207472616E73666572206661696C65"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1163": {
      "op": "DUP3"
    },
    "1164": {
      "op": "ADD"
    },
    "1165": {
      "op": "MSTORE"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xFA"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1173": {
      "op": "DUP3"
    },
    "1174": {
      "op": "ADD"
    },
    "1175": {
      "op": "MSTORE"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "1182": {
      "op": "JUMP"
    },
    "1183": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2516,
        2595
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1184": {
      "fn": "BettingGame.withdrawLink",
      "offset": [
        2449,
        2602
      ],
      "op": "POP",
      "path": "3"
    },
    "1185": {
      "fn": "BettingGame.withdrawLink",
      "jump": "o",
      "offset": [
        2449,
        2602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1186": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1187": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9678
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "SUB"
    },
    "1196": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9682,
        9696
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "1229": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9696
      ],
      "op": "AND",
      "path": "0"
    },
    "1230": {
      "branch": 27,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9668,
        9696
      ],
      "op": "EQ",
      "path": "0"
    },
    "1231": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51A"
    },
    "1234": {
      "branch": 27,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1235": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1237": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1244": {
      "op": "SHL"
    },
    "1245": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1246": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1249": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1251": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1252": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "ADD",
      "path": "0"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "MSTORE"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "1305": {
      "op": "JUMP"
    },
    "1306": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9660,
        9732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1307": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9778
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x524"
    },
    "1310": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9756,
        9765
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1311": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9767,
        9777
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1312": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E3"
    },
    "1315": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9738,
        9778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1316": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9738,
        9778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1317": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "POP",
      "path": "0"
    },
    "1318": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9576,
        9783
      ],
      "op": "POP",
      "path": "0"
    },
    "1319": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9576,
        9783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1320": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1321": {
      "fn": "BettingGame.play",
      "offset": [
        1290,
        1297
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1323": {
      "fn": "BettingGame.play",
      "offset": [
        1329,
        1337
      ],
      "op": "PUSH7",
      "path": "3",
      "statement": 7,
      "value": "0x38D7EA4C68000"
    },
    "1331": {
      "fn": "BettingGame.play",
      "offset": [
        1316,
        1325
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1332": {
      "fn": "BettingGame.play",
      "offset": [
        1316,
        1337
      ],
      "op": "LT",
      "path": "3"
    },
    "1333": {
      "branch": 24,
      "fn": "BettingGame.play",
      "offset": [
        1316,
        1337
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1334": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x599"
    },
    "1337": {
      "branch": 24,
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1338": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1340": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1341": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1349": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1352": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1354": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1355": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "ADD",
      "path": "3"
    },
    "1356": {
      "op": "MSTORE"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1361": {
      "op": "DUP3"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A206D696E696D756D20616C6C6F77656420626574"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "ADD"
    },
    "1401": {
      "op": "MSTORE"
    },
    "1402": {
      "op": "PUSH15",
      "value": "0x1034B99018171818189032BA3432B9"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1420": {
      "op": "SHL"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1428": {
      "op": "ADD"
    },
    "1429": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "1432": {
      "op": "JUMP"
    },
    "1433": {
      "fn": "BettingGame.play",
      "offset": [
        1308,
        1389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1434": {
      "fn": "BettingGame.play",
      "offset": [
        1432,
        1445
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x5A4"
    },
    "1437": {
      "fn": "BettingGame.play",
      "offset": [
        1436,
        1445
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1438": {
      "fn": "BettingGame.play",
      "offset": [
        1432,
        1433
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1440": {
      "fn": "BettingGame.play",
      "offset": [
        1432,
        1445
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1D"
    },
    "1443": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1432,
        1445
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1444": {
      "fn": "BettingGame.play",
      "offset": [
        1432,
        1445
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1445": {
      "fn": "BettingGame.play",
      "offset": [
        1407,
        1428
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "1446": {
      "fn": "BettingGame.play",
      "offset": [
        1407,
        1445
      ],
      "op": "LT",
      "path": "3"
    },
    "1447": {
      "branch": 25,
      "fn": "BettingGame.play",
      "offset": [
        1407,
        1445
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1448": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x603"
    },
    "1451": {
      "branch": 25,
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1452": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1454": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1463": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1466": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1468": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1469": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "ADD",
      "path": "3"
    },
    "1470": {
      "op": "MSTORE"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1475": {
      "op": "DUP3"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A20696E73756666696369656E74207661756C7420"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1526": {
      "op": "SHL"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1529": {
      "op": "DUP3"
    },
    "1530": {
      "op": "ADD"
    },
    "1531": {
      "op": "MSTORE"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1534": {
      "op": "ADD"
    },
    "1535": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "1538": {
      "op": "JUMP"
    },
    "1539": {
      "fn": "BettingGame.play",
      "offset": [
        1399,
        1489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1540": {
      "fn": "BettingGame.play",
      "offset": [
        1540,
        1543
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x1"
    },
    "1542": {
      "fn": "BettingGame.play",
      "offset": [
        1540,
        1543
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1543": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1545": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1546": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1555": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1556": {
      "fn": "BettingGame.play",
      "offset": [
        1530,
        1534
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1557": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1559": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1560": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1561": {
      "op": "MSTORE"
    },
    "1562": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1511
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x0"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1601": {
      "op": "SHL"
    },
    "1602": {
      "op": "SUB"
    },
    "1603": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1521
      ],
      "op": "AND",
      "path": "3"
    },
    "1604": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1521
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1605": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1521
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1610": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1521
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1616": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1618": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1619": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1620": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1621": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "SUB",
      "path": "3"
    },
    "1622": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1623": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1624": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "GAS",
      "path": "3"
    },
    "1625": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1626": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1627": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1628": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1629": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66A"
    },
    "1632": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1633": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1634": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1636": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1637": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1638": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1639": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1641": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1642": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1643": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1644": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1645": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1646": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1647": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1649": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1650": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1651": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1653": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "NOT",
      "path": "3"
    },
    "1654": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1656": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1657": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1658": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "AND",
      "path": "3"
    },
    "1659": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1660": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1661": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1662": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1664": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1665": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "POP",
      "path": "3"
    },
    "1666": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1667": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "ADD",
      "path": "3"
    },
    "1668": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1669": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x68E"
    },
    "1672": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1673": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1674": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB3C"
    },
    "1677": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1507,
        1536
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1678": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1536
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1679": {
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1543
      ],
      "op": "LT",
      "path": "3"
    },
    "1680": {
      "branch": 26,
      "fn": "BettingGame.play",
      "offset": [
        1507,
        1543
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1681": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E8"
    },
    "1684": {
      "branch": 26,
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1685": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1687": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1694": {
      "op": "SHL"
    },
    "1695": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1696": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1699": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1701": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1702": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "ADD",
      "path": "3"
    },
    "1703": {
      "op": "MSTORE"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1706": {
      "op": "DUP1"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A20696E73756666696369656E74204C494E4B2074"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH4",
      "value": "0x37B5B2B7"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1758": {
      "op": "DUP3"
    },
    "1759": {
      "op": "ADD"
    },
    "1760": {
      "op": "MSTORE"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1763": {
      "op": "ADD"
    },
    "1764": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27D"
    },
    "1767": {
      "op": "JUMP"
    },
    "1768": {
      "fn": "BettingGame.play",
      "offset": [
        1499,
        1584
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1769": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1604
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x4"
    },
    "1771": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1772": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1773": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1774": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1604
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1776": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F8"
    },
    "1779": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1780": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB55"
    },
    "1783": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1595,
        1606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1784": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1785": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1786": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1787": {
      "fn": "BettingGame.play",
      "offset": [
        1595,
        1606
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "op": "POP"
    },
    "1790": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x40"
    },
    "1792": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1793": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1794": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1796": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1797": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1798": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1799": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1800": {
      "fn": "BettingGame.play",
      "offset": [
        1640,
        1649
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1802": {
      "fn": "BettingGame.play",
      "offset": [
        1640,
        1649
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1803": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1804": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1805": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1806": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1807": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1808": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1809": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1811": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1812": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1813": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1814": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1815": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1816": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1817": {
      "fn": "BettingGame.play",
      "offset": [
        1658,
        1667
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1818": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1819": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1820": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1821": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1822": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1823": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1824": {
      "fn": "BettingGame.play",
      "offset": [
        1677,
        1687
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1825": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1827": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1828": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1829": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1830": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1831": {
      "fn": "BettingGame.play",
      "offset": [
        1635,
        1689
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1834": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1835": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1836": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1837": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1839": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1840": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1841": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1842": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1843": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1844": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1632
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1845": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1846": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1847": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1848": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1849": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1850": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1851": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1853": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1854": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1855": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1856": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1857": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1860": {
      "op": "NOT"
    },
    "1861": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "AND",
      "path": "3"
    },
    "1862": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1863": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1864": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1865": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1866": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1867": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1868": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "OR",
      "path": "3"
    },
    "1869": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1870": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1871": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1872": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1873": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1874": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1876": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1877": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1878": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1879": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1880": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1881": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1882": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1883": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1884": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1885": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1887": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1888": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1889": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "ADD",
      "path": "3"
    },
    "1890": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1891": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "SUB"
    },
    "1900": {
      "op": "NOT"
    },
    "1901": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "AND",
      "path": "3"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1908": {
      "op": "SHL"
    },
    "1909": {
      "op": "SUB"
    },
    "1910": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1911": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1912": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "AND",
      "path": "3"
    },
    "1913": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1914": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1915": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1916": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "OR",
      "path": "3"
    },
    "1917": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1918": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1919": {
      "fn": "BettingGame.play",
      "offset": [
        1616,
        1689
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1920": {
      "fn": "BettingGame.play",
      "offset": [
        1738,
        1745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1921": {
      "fn": "BettingGame.play",
      "offset": [
        1738,
        1745
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1922": {
      "fn": "BettingGame.play",
      "offset": [
        1747,
        1750
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1923": {
      "fn": "BettingGame.play",
      "offset": [
        1747,
        1750
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1924": {
      "op": "SWAP1"
    },
    "1925": {
      "op": "SWAP2"
    },
    "1926": {
      "fn": "BettingGame.play",
      "offset": [
        1720,
        1751
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x78E"
    },
    "1929": {
      "fn": "BettingGame.play",
      "offset": [
        1720,
        1751
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1930": {
      "fn": "BettingGame.play",
      "offset": [
        1720,
        1737
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x903"
    },
    "1933": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1720,
        1751
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1934": {
      "fn": "BettingGame.play",
      "offset": [
        1720,
        1751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1935": {
      "fn": "BettingGame.play",
      "offset": [
        1799,
        1808
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x4"
    },
    "1937": {
      "fn": "BettingGame.play",
      "offset": [
        1799,
        1808
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1938": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1940": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1941": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1942": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1943": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1945": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1947": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1948": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1949": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1950": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1952": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1953": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1954": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1955": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1956": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1808
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1957": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1808
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1958": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1808
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1959": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1808
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1960": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "MLOAD",
      "path": "3",
      "statement": 13
    },
    "1961": {
      "op": "DUP3"
    },
    "1962": {
      "op": "DUP2"
    },
    "1963": {
      "op": "MSTORE"
    },
    "1964": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1965": {
      "fn": "BettingGame.play",
      "offset": [
        1761,
        1796
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1966": {
      "op": "POP"
    },
    "1967": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xE5F5B44D72D4143C278EB745C4ACC0695C4A5BC616BE5BEECF46ABE29661780E"
    },
    "2000": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2001": {
      "op": "ADD"
    },
    "2002": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2004": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2005": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2006": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2007": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "SUB",
      "path": "3"
    },
    "2008": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2009": {
      "fn": "BettingGame.play",
      "offset": [
        1824,
        1854
      ],
      "op": "LOG1",
      "path": "3"
    },
    "2010": {
      "op": "POP"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "fn": "BettingGame.play",
      "offset": [
        1872,
        1881
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x4"
    },
    "2014": {
      "fn": "BettingGame.play",
      "offset": [
        1872,
        1881
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2015": {
      "fn": "BettingGame.play",
      "offset": [
        1872,
        1881
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2016": {
      "fn": "BettingGame.play",
      "offset": [
        1240,
        1888
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2017": {
      "op": "POP"
    },
    "2018": {
      "fn": "BettingGame.play",
      "jump": "o",
      "offset": [
        1240,
        1888
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2019": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1894,
        2443
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2020": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2057,
        2066
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2022": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7F0"
    },
    "2025": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2083,
        2084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2027": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2080
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2028": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6E"
    },
    "2031": {
      "fn": "BettingGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        2069,
        2084
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2032": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2033": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2088,
        2089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2035": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2036": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2037": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2038": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2141
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2040": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2042": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2043": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2044": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2045": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2047": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2048": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2049": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2050": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2051": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2052": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2053": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2054": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2187
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2056": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2057": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2058": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2059": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2060": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2061": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2182,
        2195
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2062": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2063": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2064": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2066": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2067": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2068": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2069": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2070": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2071": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2072": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2073": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2074": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2076": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2077": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2078": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2079": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2081": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "AND",
      "path": "3"
    },
    "2082": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2083": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2084": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2085": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2086": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2087": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2088": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2089": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2090": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2092": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2093": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2094": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2095": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2096": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2097": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2098": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2099": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2100": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2101": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2102": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2104": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2105": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "AND",
      "path": "3"
    },
    "2115": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2117": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2118": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "ADD",
      "path": "3"
    },
    "2119": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2120": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2089
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2121": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2089
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2122": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2069,
        2089
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2123": {
      "op": "POP"
    },
    "2124": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2125": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2117,
        2153
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2126": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2163,
        2195
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2127": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2222,
        2239
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2128": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2222,
        2239
      ],
      "op": "EQ",
      "path": "3"
    },
    "2129": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2250,
        2370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2130": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2250,
        2370
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2131": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2250,
        2370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A9"
    },
    "2134": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2250,
        2370
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2135": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2279,
        2296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2137": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2303,
        2307
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2138": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2303,
        2314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2140": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2303,
        2314
      ],
      "op": "ADD",
      "path": "3"
    },
    "2141": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2303,
        2314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2142": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2299,
        2300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2144": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2299,
        2314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x869"
    },
    "2147": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2299,
        2314
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2148": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2299,
        2314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2149": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2299,
        2314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1D"
    },
    "2152": {
      "fn": "BettingGame.fulfillRandomness",
      "jump": "i",
      "offset": [
        2299,
        2314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2153": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2299,
        2314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2154": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2339
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x60"
    },
    "2156": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2339
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2157": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2339
      ],
      "op": "ADD",
      "path": "3"
    },
    "2158": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2339
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2159": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2161": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2162": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2279,
        2314
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2163": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2279,
        2314
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2164": {
      "op": "POP"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2171": {
      "op": "SHL"
    },
    "2172": {
      "op": "SUB"
    },
    "2173": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2348
      ],
      "op": "AND",
      "path": "3"
    },
    "2174": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2348
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2175": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2176": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2177": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "2180": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "MUL",
      "path": "3"
    },
    "2181": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2182": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2279,
        2314
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2183": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2279,
        2314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2184": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2186": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2187": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2188": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2189": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2279,
        2314
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2190": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2348
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2191": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2192": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "CALL",
      "path": "3"
    },
    "2193": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2194": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "POP",
      "path": "3"
    },
    "2195": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "POP",
      "path": "3"
    },
    "2196": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "POP",
      "path": "3"
    },
    "2197": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "POP",
      "path": "3"
    },
    "2198": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2199": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2200": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2201": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A6"
    },
    "2204": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2205": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2206": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2208": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2209": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2210": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2211": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2213": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2214": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2215": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2328,
        2359
      ],
      "op": "POP",
      "path": "3"
    },
    "2216": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2265,
        2370
      ],
      "op": "POP",
      "path": "3"
    },
    "2217": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2250,
        2370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2218": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2400,
        2411
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x60"
    },
    "2220": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2400,
        2411
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2221": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2400,
        2411
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2222": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2400,
        2411
      ],
      "op": "ADD",
      "path": "3"
    },
    "2223": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2400,
        2411
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2224": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2413,
        2424
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2226": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2413,
        2424
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2227": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2413,
        2424
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2228": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2413,
        2424
      ],
      "op": "ADD",
      "path": "3"
    },
    "2229": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2413,
        2424
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2230": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2231": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "op": "SUB"
    },
    "2240": {
      "op": "SWAP1"
    },
    "2241": {
      "op": "SWAP4"
    },
    "2242": {
      "op": "AND"
    },
    "2243": {
      "op": "DUP4"
    },
    "2244": {
      "op": "MSTORE"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2247": {
      "op": "DUP4"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "op": "MSTORE"
    },
    "2250": {
      "op": "DUP4"
    },
    "2251": {
      "op": "ISZERO"
    },
    "2252": {
      "op": "ISZERO"
    },
    "2253": {
      "op": "DUP3"
    },
    "2254": {
      "op": "DUP3"
    },
    "2255": {
      "op": "ADD"
    },
    "2256": {
      "op": "MSTORE"
    },
    "2257": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2258": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2392,
        2398
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2259": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2392,
        2398
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2260": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF83BA849142075C91A16090145A5AE9453A3DB63DB6F4D0320E28649AC4316E5"
    },
    "2293": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2294": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2295": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2296": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "SUB",
      "path": "3"
    },
    "2297": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "ADD",
      "path": "3"
    },
    "2298": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2299": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        2385,
        2436
      ],
      "op": "LOG2",
      "path": "3"
    },
    "2300": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1980,
        2443
      ],
      "op": "POP",
      "path": "3"
    },
    "2301": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1980,
        2443
      ],
      "op": "POP",
      "path": "3"
    },
    "2302": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1980,
        2443
      ],
      "op": "POP",
      "path": "3"
    },
    "2303": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1980,
        2443
      ],
      "op": "POP",
      "path": "3"
    },
    "2304": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1894,
        2443
      ],
      "op": "POP",
      "path": "3"
    },
    "2305": {
      "fn": "BettingGame.fulfillRandomness",
      "offset": [
        1894,
        2443
      ],
      "op": "POP",
      "path": "3"
    },
    "2306": {
      "fn": "BettingGame.fulfillRandomness",
      "jump": "o",
      "offset": [
        1894,
        2443
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2307": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        8752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2308": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7809,
        7826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2310": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7838
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "op": "SUB"
    },
    "2351": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7854
      ],
      "op": "AND",
      "path": "0"
    },
    "2352": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7854
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4000AEA0"
    },
    "2357": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7855,
        7869
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "2390": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7871,
        7875
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2391": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7896
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2392": {
      "offset": [
        6589,
        6590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2394": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2396": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2397": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2399": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "ADD",
      "path": "0"
    },
    "2400": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x973"
    },
    "2403": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2404": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2405": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2406": {
      "op": "SWAP2"
    },
    "2407": {
      "op": "DUP3"
    },
    "2408": {
      "op": "MSTORE"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2411": {
      "op": "DUP3"
    },
    "2412": {
      "op": "ADD"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "SWAP1"
    },
    "2418": {
      "op": "JUMP"
    },
    "2419": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2420": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2422": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2423": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2425": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2426": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2427": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SUB",
      "path": "0"
    },
    "2428": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SUB",
      "path": "0"
    },
    "2429": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2430": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2431": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2432": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2434": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7877,
        7920
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2435": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2437": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2438": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2439": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2444": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "AND",
      "path": "0"
    },
    "2445": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2447": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SHL",
      "path": "0"
    },
    "2448": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2449": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2450": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2452": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "2453": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9A0"
    },
    "2456": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2457": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2458": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2459": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2460": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB90"
    },
    "2463": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2464": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2465": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2467": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2469": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2470": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2471": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2472": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SUB",
      "path": "0"
    },
    "2473": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2474": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2476": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2477": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "GAS",
      "path": "0"
    },
    "2478": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "CALL",
      "path": "0"
    },
    "2479": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2480": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2481": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2482": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BF"
    },
    "2485": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2486": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2487": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2489": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2490": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2491": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2492": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2494": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2495": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2496": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "2497": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "2498": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "2499": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "2500": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2502": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2503": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2504": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2506": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "NOT",
      "path": "0"
    },
    "2507": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2509": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2510": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "2511": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "AND",
      "path": "0"
    },
    "2512": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2513": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "2514": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2515": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2517": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2518": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "POP",
      "path": "0"
    },
    "2519": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2520": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "ADD",
      "path": "0"
    },
    "2521": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2522": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E3"
    },
    "2525": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2526": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2527": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAEA"
    },
    "2530": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2531": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7834,
        7921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8152,
        8167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2535": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2536": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2537": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2538": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2540": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2541": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2542": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2543": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2545": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2546": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2547": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2548": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8235,
        8251
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2549": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 18
    },
    "2550": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2551": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2552": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2553": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "1"
    },
    "2554": {
      "op": "DUP9"
    },
    "2555": {
      "op": "SWAP1"
    },
    "2556": {
      "op": "MSTORE"
    },
    "2557": {
      "op": "DUP1"
    },
    "2558": {
      "op": "DUP4"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "DUP6"
    },
    "2561": {
      "op": "SWAP1"
    },
    "2562": {
      "op": "MSTORE"
    },
    "2563": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8228,
        8232
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2566": {
      "op": "DUP3"
    },
    "2567": {
      "op": "ADD"
    },
    "2568": {
      "op": "MSTORE"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2571": {
      "op": "DUP1"
    },
    "2572": {
      "op": "DUP3"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "DUP4"
    },
    "2575": {
      "op": "SWAP1"
    },
    "2576": {
      "op": "MSTORE"
    },
    "2577": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2578": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2579": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2580": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2581": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SUB",
      "path": "1"
    },
    "2582": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2583": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2584": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "ADD",
      "path": "1"
    },
    "2585": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2586": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2589": {
      "op": "SWAP1"
    },
    "2590": {
      "op": "SWAP2"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2593": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2594": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        978,
        1029
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2595": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2596": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2597": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2598": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2599": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "ADD",
      "path": "1"
    },
    "2600": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2601": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2602": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2603": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        968,
        1030
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2604": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 19
    },
    "2605": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2606": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2607": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2608": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2609": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2610": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2611": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "2614": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2615": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8701,
        8702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2617": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFC"
    },
    "2620": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8682,
        8702
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2621": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8682,
        8702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2622": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2624": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2625": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2626": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2627": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2629": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2630": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2631": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2632": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2634": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2635": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2636": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2637": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8679
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2638": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2639": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2640": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2641": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8663,
        8702
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2642": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 20
    },
    "2643": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2644": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2645": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2646": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "1"
    },
    "2647": {
      "op": "DUP8"
    },
    "2648": {
      "op": "SWAP1"
    },
    "2649": {
      "op": "MSTORE"
    },
    "2650": {
      "op": "DUP1"
    },
    "2651": {
      "op": "DUP3"
    },
    "2652": {
      "op": "ADD"
    },
    "2653": {
      "op": "DUP5"
    },
    "2654": {
      "op": "SWAP1"
    },
    "2655": {
      "op": "MSTORE"
    },
    "2656": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2657": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2658": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2659": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2660": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SUB",
      "path": "1"
    },
    "2661": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2662": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "ADD",
      "path": "1"
    },
    "2663": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2664": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2667": {
      "op": "SWAP1"
    },
    "2668": {
      "op": "SWAP2"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2671": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2672": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1535,
        1576
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2673": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2674": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2675": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2676": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "ADD",
      "path": "1"
    },
    "2677": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1525,
        1577
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2678": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8708,
        8747
      ],
      "op": "SWAP5",
      "path": "0",
      "statement": 21
    },
    "2679": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7732,
        8752
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "POP"
    },
    "2683": {
      "op": "POP"
    },
    "2684": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7732,
        8752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2685": {
      "op": "JUMPDEST"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2690": {
      "op": "DUP3"
    },
    "2691": {
      "op": "DUP5"
    },
    "2692": {
      "op": "SUB"
    },
    "2693": {
      "op": "SLT"
    },
    "2694": {
      "op": "ISZERO"
    },
    "2695": {
      "op": "PUSH2",
      "value": "0xA8F"
    },
    "2698": {
      "op": "JUMPI"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2701": {
      "op": "DUP1"
    },
    "2702": {
      "op": "REVERT"
    },
    "2703": {
      "op": "JUMPDEST"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "op": "CALLDATALOAD"
    },
    "2706": {
      "op": "SWAP2"
    },
    "2707": {
      "op": "SWAP1"
    },
    "2708": {
      "op": "POP"
    },
    "2709": {
      "jump": "o",
      "op": "JUMP"
    },
    "2710": {
      "op": "JUMPDEST"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2713": {
      "op": "DUP1"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2716": {
      "op": "DUP4"
    },
    "2717": {
      "op": "DUP6"
    },
    "2718": {
      "op": "SUB"
    },
    "2719": {
      "op": "SLT"
    },
    "2720": {
      "op": "ISZERO"
    },
    "2721": {
      "op": "PUSH2",
      "value": "0xAA9"
    },
    "2724": {
      "op": "JUMPI"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2727": {
      "op": "DUP1"
    },
    "2728": {
      "op": "REVERT"
    },
    "2729": {
      "op": "JUMPDEST"
    },
    "2730": {
      "op": "POP"
    },
    "2731": {
      "op": "POP"
    },
    "2732": {
      "op": "DUP1"
    },
    "2733": {
      "op": "CALLDATALOAD"
    },
    "2734": {
      "op": "SWAP3"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2737": {
      "op": "SWAP1"
    },
    "2738": {
      "op": "SWAP2"
    },
    "2739": {
      "op": "ADD"
    },
    "2740": {
      "op": "CALLDATALOAD"
    },
    "2741": {
      "op": "SWAP2"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "jump": "o",
      "op": "JUMP"
    },
    "2744": {
      "op": "JUMPDEST"
    },
    "2745": {
      "op": "DUP1"
    },
    "2746": {
      "op": "ISZERO"
    },
    "2747": {
      "op": "ISZERO"
    },
    "2748": {
      "op": "DUP2"
    },
    "2749": {
      "op": "EQ"
    },
    "2750": {
      "op": "PUSH2",
      "value": "0x49F"
    },
    "2753": {
      "op": "JUMPI"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2756": {
      "op": "DUP1"
    },
    "2757": {
      "op": "REVERT"
    },
    "2758": {
      "op": "JUMPDEST"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2763": {
      "op": "DUP3"
    },
    "2764": {
      "op": "DUP5"
    },
    "2765": {
      "op": "SUB"
    },
    "2766": {
      "op": "SLT"
    },
    "2767": {
      "op": "ISZERO"
    },
    "2768": {
      "op": "PUSH2",
      "value": "0xAD8"
    },
    "2771": {
      "op": "JUMPI"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2774": {
      "op": "DUP1"
    },
    "2775": {
      "op": "REVERT"
    },
    "2776": {
      "op": "JUMPDEST"
    },
    "2777": {
      "op": "DUP2"
    },
    "2778": {
      "op": "CALLDATALOAD"
    },
    "2779": {
      "op": "PUSH2",
      "value": "0xAE3"
    },
    "2782": {
      "op": "DUP2"
    },
    "2783": {
      "op": "PUSH2",
      "value": "0xAB8"
    },
    "2786": {
      "jump": "i",
      "op": "JUMP"
    },
    "2787": {
      "op": "JUMPDEST"
    },
    "2788": {
      "op": "SWAP4"
    },
    "2789": {
      "op": "SWAP3"
    },
    "2790": {
      "op": "POP"
    },
    "2791": {
      "op": "POP"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "jump": "o",
      "op": "JUMP"
    },
    "2794": {
      "op": "JUMPDEST"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2799": {
      "op": "DUP3"
    },
    "2800": {
      "op": "DUP5"
    },
    "2801": {
      "op": "SUB"
    },
    "2802": {
      "op": "SLT"
    },
    "2803": {
      "op": "ISZERO"
    },
    "2804": {
      "op": "PUSH2",
      "value": "0xAFC"
    },
    "2807": {
      "op": "JUMPI"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2810": {
      "op": "DUP1"
    },
    "2811": {
      "op": "REVERT"
    },
    "2812": {
      "op": "JUMPDEST"
    },
    "2813": {
      "op": "DUP2"
    },
    "2814": {
      "op": "MLOAD"
    },
    "2815": {
      "op": "PUSH2",
      "value": "0xAE3"
    },
    "2818": {
      "op": "DUP2"
    },
    "2819": {
      "op": "PUSH2",
      "value": "0xAB8"
    },
    "2822": {
      "jump": "i",
      "op": "JUMP"
    },
    "2823": {
      "op": "JUMPDEST"
    },
    "2824": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2831": {
      "op": "SHL"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2834": {
      "op": "MSTORE"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2839": {
      "op": "MSTORE"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2844": {
      "op": "REVERT"
    },
    "2845": {
      "op": "JUMPDEST"
    },
    "2846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2848": {
      "op": "DUP2"
    },
    "2849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2851": {
      "op": "NOT"
    },
    "2852": {
      "op": "DIV"
    },
    "2853": {
      "op": "DUP4"
    },
    "2854": {
      "op": "GT"
    },
    "2855": {
      "op": "DUP3"
    },
    "2856": {
      "op": "ISZERO"
    },
    "2857": {
      "op": "ISZERO"
    },
    "2858": {
      "op": "AND"
    },
    "2859": {
      "op": "ISZERO"
    },
    "2860": {
      "op": "PUSH2",
      "value": "0xB37"
    },
    "2863": {
      "op": "JUMPI"
    },
    "2864": {
      "op": "PUSH2",
      "value": "0xB37"
    },
    "2867": {
      "op": "PUSH2",
      "value": "0xB07"
    },
    "2870": {
      "jump": "i",
      "op": "JUMP"
    },
    "2871": {
      "op": "JUMPDEST"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "op": "MUL"
    },
    "2874": {
      "op": "SWAP1"
    },
    "2875": {
      "jump": "o",
      "op": "JUMP"
    },
    "2876": {
      "op": "JUMPDEST"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2881": {
      "op": "DUP3"
    },
    "2882": {
      "op": "DUP5"
    },
    "2883": {
      "op": "SUB"
    },
    "2884": {
      "op": "SLT"
    },
    "2885": {
      "op": "ISZERO"
    },
    "2886": {
      "op": "PUSH2",
      "value": "0xB4E"
    },
    "2889": {
      "op": "JUMPI"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2892": {
      "op": "DUP1"
    },
    "2893": {
      "op": "REVERT"
    },
    "2894": {
      "op": "JUMPDEST"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "op": "MLOAD"
    },
    "2897": {
      "op": "SWAP2"
    },
    "2898": {
      "op": "SWAP1"
    },
    "2899": {
      "op": "POP"
    },
    "2900": {
      "jump": "o",
      "op": "JUMP"
    },
    "2901": {
      "op": "JUMPDEST"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2906": {
      "op": "DUP3"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "op": "PUSH2",
      "value": "0xB67"
    },
    "2911": {
      "op": "JUMPI"
    },
    "2912": {
      "op": "PUSH2",
      "value": "0xB67"
    },
    "2915": {
      "op": "PUSH2",
      "value": "0xB07"
    },
    "2918": {
      "jump": "i",
      "op": "JUMP"
    },
    "2919": {
      "op": "JUMPDEST"
    },
    "2920": {
      "op": "POP"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "ADD"
    },
    "2924": {
      "op": "SWAP1"
    },
    "2925": {
      "jump": "o",
      "op": "JUMP"
    },
    "2926": {
      "op": "JUMPDEST"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2929": {
      "op": "DUP3"
    },
    "2930": {
      "op": "PUSH2",
      "value": "0xB8B"
    },
    "2933": {
      "op": "JUMPI"
    },
    "2934": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2944": {
      "op": "MSTORE"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2949": {
      "op": "MSTORE"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2954": {
      "op": "REVERT"
    },
    "2955": {
      "op": "JUMPDEST"
    },
    "2956": {
      "op": "POP"
    },
    "2957": {
      "op": "MOD"
    },
    "2958": {
      "op": "SWAP1"
    },
    "2959": {
      "jump": "o",
      "op": "JUMP"
    },
    "2960": {
      "op": "JUMPDEST"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2963": {
      "op": "DUP1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "SUB"
    },
    "2968": {
      "op": "DUP5"
    },
    "2969": {
      "op": "AND"
    },
    "2970": {
      "op": "DUP2"
    },
    "2971": {
      "op": "MSTORE"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2976": {
      "op": "DUP5"
    },
    "2977": {
      "op": "DUP2"
    },
    "2978": {
      "op": "DUP5"
    },
    "2979": {
      "op": "ADD"
    },
    "2980": {
      "op": "MSTORE"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2985": {
      "op": "DUP5"
    },
    "2986": {
      "op": "ADD"
    },
    "2987": {
      "op": "MSTORE"
    },
    "2988": {
      "op": "DUP4"
    },
    "2989": {
      "op": "MLOAD"
    },
    "2990": {
      "op": "DUP1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2993": {
      "op": "DUP6"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "op": "MSTORE"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2998": {
      "op": "JUMPDEST"
    },
    "2999": {
      "op": "DUP2"
    },
    "3000": {
      "op": "DUP2"
    },
    "3001": {
      "op": "LT"
    },
    "3002": {
      "op": "ISZERO"
    },
    "3003": {
      "op": "PUSH2",
      "value": "0xBD2"
    },
    "3006": {
      "op": "JUMPI"
    },
    "3007": {
      "op": "DUP6"
    },
    "3008": {
      "op": "DUP2"
    },
    "3009": {
      "op": "ADD"
    },
    "3010": {
      "op": "DUP4"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "MLOAD"
    },
    "3013": {
      "op": "DUP6"
    },
    "3014": {
      "op": "DUP3"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3018": {
      "op": "ADD"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "DUP3"
    },
    "3021": {
      "op": "ADD"
    },
    "3022": {
      "op": "PUSH2",
      "value": "0xBB6"
    },
    "3025": {
      "op": "JUMP"
    },
    "3026": {
      "op": "JUMPDEST"
    },
    "3027": {
      "op": "DUP2"
    },
    "3028": {
      "op": "DUP2"
    },
    "3029": {
      "op": "GT"
    },
    "3030": {
      "op": "ISZERO"
    },
    "3031": {
      "op": "PUSH2",
      "value": "0xBE4"
    },
    "3034": {
      "op": "JUMPI"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3039": {
      "op": "DUP4"
    },
    "3040": {
      "op": "DUP8"
    },
    "3041": {
      "op": "ADD"
    },
    "3042": {
      "op": "ADD"
    },
    "3043": {
      "op": "MSTORE"
    },
    "3044": {
      "op": "JUMPDEST"
    },
    "3045": {
      "op": "POP"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3048": {
      "op": "ADD"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3051": {
      "op": "NOT"
    },
    "3052": {
      "op": "AND"
    },
    "3053": {
      "op": "SWAP3"
    },
    "3054": {
      "op": "SWAP1"
    },
    "3055": {
      "op": "SWAP3"
    },
    "3056": {
      "op": "ADD"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3059": {
      "op": "ADD"
    },
    "3060": {
      "op": "SWAP6"
    },
    "3061": {
      "op": "SWAP5"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "op": "POP"
    },
    "3065": {
      "op": "POP"
    },
    "3066": {
      "op": "POP"
    },
    "3067": {
      "jump": "o",
      "op": "JUMP"
    },
    "3068": {
      "op": "JUMPDEST"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "NOT"
    },
    "3073": {
      "op": "DUP3"
    },
    "3074": {
      "op": "GT"
    },
    "3075": {
      "op": "ISZERO"
    },
    "3076": {
      "op": "PUSH2",
      "value": "0xC0F"
    },
    "3079": {
      "op": "JUMPI"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC0F"
    },
    "3083": {
      "op": "PUSH2",
      "value": "0xB07"
    },
    "3086": {
      "jump": "i",
      "op": "JUMP"
    },
    "3087": {
      "op": "JUMPDEST"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "op": "SWAP1"
    },
    "3091": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "dd53b9b57f4b057483c04284f25a25a2dde2cfff",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\n\ncontract BettingGame is VRFConsumerBase {\n\n    uint256 public fee;\n    bytes32 public keyhash;\n    address payable admin;\n\n    uint256 public gameCount = 0;\n    mapping(uint256 => Game) public games;\n    mapping(bytes32 => uint256) public requestIdToGameIdMapping;\n\n    struct Game {\n        uint256 id;\n        bool head;\n        uint256 amount;\n        address payable player;\n    }\n\n    event RequestedRandomness(bytes32 requestId);\n    event Withdraw(address admin, uint256 amount);\n    event Received(address indexed sender, uint256 amount);\n    event Result(uint256 indexed gameId, address player, uint256 amount, bool won);\n\n    constructor(\n        address _vrfCoordinator,\n        address _link,\n        uint256 _fee,\n        bytes32 _keyhash\n    ) VRFConsumerBase(_vrfCoordinator, _link) {\n        admin = payable(msg.sender);\n        fee = _fee;\n        keyhash = _keyhash;\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, 'caller is not the admin');\n        _;\n    }\n\n    // _head represents whether player has chosen Head or not\n    function play(bool _head) public payable returns (uint256){\n        require(msg.value >= 10 ** 15, \"BettingGame: minimum allowed bet is 0.001 ether\");\n        require(address(this).balance >= 2 * msg.value, \"BettingGame: insufficient vault balance\");\n        require(LINK.balanceOf(address(this)) >= fee, \"BettingGame: insufficient LINK token\");\n\n        gameCount++;\n        games[gameCount] = Game(gameCount, _head, msg.value, payable(msg.sender));\n\n        bytes32 requestId = requestRandomness(keyhash, fee);\n        requestIdToGameIdMapping[requestId] = gameCount;\n\n        emit RequestedRandomness(requestId);\n\n        return gameCount;\n    }\n\n    function fulfillRandomness(bytes32 _requestId, uint256 _randomness) internal override {\n        // even number represents Head, odd number represents Tail\n        bool head = _randomness % 2 == 0;\n\n        uint256 gameId = requestIdToGameIdMapping[_requestId];\n        Game memory game = games[gameId];\n        bool playerWon = head == game.head;\n\n        if (playerWon) {\n            uint256 winAmount = 2 * game.amount;\n            game.player.transfer(winAmount);\n        }\n\n        emit Result(gameId, game.player, game.amount, playerWon);\n    }\n\n    function withdrawLink(uint256 amount) external onlyAdmin {\n        require(LINK.transfer(msg.sender, amount), \"BettingGame: LINK transfer failed\");\n    }\n\n    function withdrawEther(uint256 amount) external payable onlyAdmin {\n        require(address(this).balance >= amount, \"BettingGame: insufficient balance\");\n        admin.transfer(amount);\n\n        emit Withdraw(admin, amount);\n    }\n}\n",
  "sourceMap": "86:2755:3:-:0;;;240:1;213:28;;722:254;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9306:32:0;;;;;9344;;;;;;894:5:3::1;:27:::0;;-1:-1:-1;;;;;;894:27:3::1;910:10;894:27;::::0;;;931:10;-1:-1:-1;951:18:3;86:2755;;14:177:4;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:4;-1:-1:-1;;;196:416:4:o;:::-;86:2755:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BettingGame.sol",
  "type": "contract"
}