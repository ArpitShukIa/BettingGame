{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_keyhash",
          "type": "bytes32"
        },
        {
          "internalType": "uint64",
          "name": "_subscriptionId",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "have",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "want",
          "type": "address"
        }
      ],
      "name": "OnlyCoordinatorCanFulfill",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "RequestedRandomness",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "won",
          "type": "bool"
        }
      ],
      "name": "Result",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gameCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "head",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "player",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_head",
          "type": "bool"
        }
      ],
      "name": "play",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "randomWords",
          "type": "uint256[]"
        }
      ],
      "name": "rawFulfillRandomWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestRandomWords",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/VRFConsumerBaseV2.sol",
    "1": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
    "2": "contracts/BettingGame.sol"
  },
  "ast": {
    "absolutePath": "contracts/BettingGame.sol",
    "exportedSymbols": {
      "BettingGame": [
        338
      ],
      "VRFConsumerBaseV2": [
        396
      ],
      "VRFCoordinatorV2Interface": [
        492
      ]
    },
    "id": 339,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 339,
        "sourceUnit": 493,
        "src": "25:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/arpit/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.4.2/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 339,
        "sourceUnit": 397,
        "src": "106:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "VRFConsumerBaseV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 396,
              "src": "193:17:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "193:17:2"
          }
        ],
        "canonicalName": "BettingGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 338,
        "linearizedBaseContracts": [
          338,
          396
        ],
        "name": "BettingGame",
        "nameLocation": "178:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "234:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "218:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "218:15:2",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "COORDINATOR",
            "nameLocation": "272:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "246:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$492",
              "typeString": "contract VRFCoordinatorV2Interface"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "VRFCoordinatorV2Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 492,
                "src": "246:25:2"
              },
              "referencedDeclaration": 492,
              "src": "246:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$492",
                "typeString": "contract VRFCoordinatorV2Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "keyhash",
            "nameLocation": "297:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "289:15:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 11,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "subscriptionId",
            "nameLocation": "317:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "310:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 13,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "310:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "requestConfirmations",
            "nameLocation": "344:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "337:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 15,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "337:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 16,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "367:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "numWords",
            "nameLocation": "381:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "374:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 18,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "374:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3530",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "392:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_50_by_1",
                "typeString": "int_const 50"
              },
              "value": "50"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "callbackGasLimit",
            "nameLocation": "407:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "400:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 21,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "400:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_10000000_by_1",
                "typeString": "int_const 10000000"
              },
              "id": 24,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 22,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "426:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "37",
                "id": 23,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "432:1:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_7_by_1",
                  "typeString": "int_const 7"
                },
                "value": "7"
              },
              "src": "426:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000_by_1",
                "typeString": "int_const 10000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "randomWords",
            "nameLocation": "450:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "440:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 26,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "440:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 27,
              "nodeType": "ArrayTypeName",
              "src": "440:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4d1975b4",
            "id": 31,
            "mutability": "mutable",
            "name": "gameCount",
            "nameLocation": "483:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "468:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "468:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "495:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "117a5b90",
            "id": 36,
            "mutability": "mutable",
            "name": "games",
            "nameLocation": "534:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 338,
            "src": "502:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$45_storage_$",
              "typeString": "mapping(uint256 => struct BettingGame.Game)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 32,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "510:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "502:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$45_storage_$",
                "typeString": "mapping(uint256 => struct BettingGame.Game)"
              },
              "valueType": {
                "id": 34,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 33,
                  "name": "Game",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45,
                  "src": "521:4:2"
                },
                "referencedDeclaration": 45,
                "src": "521:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Game_$45_storage_ptr",
                  "typeString": "struct BettingGame.Game"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "BettingGame.Game",
            "id": 45,
            "members": [
              {
                "constant": false,
                "id": 38,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "576:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "568:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "568:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "head",
                "nameLocation": "593:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "588:9:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 39,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "615:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "607:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "607:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "player",
                "nameLocation": "647:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 45,
                "src": "631:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 43,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "631:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Game",
            "nameLocation": "553:4:2",
            "nodeType": "StructDefinition",
            "scope": 338,
            "src": "546:114:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "5d7d0431c4991fcc9f63f03ad0ead4128b866a8ed115a818b6d87a3afedb7264",
            "id": 49,
            "name": "RequestedRandomness",
            "nameLocation": "672:19:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "700:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 49,
                  "src": "692:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "691:19:2"
            },
            "src": "666:45:2"
          },
          {
            "anonymous": false,
            "eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
            "id": 55,
            "name": "Withdraw",
            "nameLocation": "722:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "739:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "731:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "754:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "746:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "730:31:2"
            },
            "src": "716:46:2"
          },
          {
            "anonymous": false,
            "eventSelector": "88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874",
            "id": 61,
            "name": "Received",
            "nameLocation": "773:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "798:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "782:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "814:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "806:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:40:2"
            },
            "src": "767:55:2"
          },
          {
            "anonymous": false,
            "eventSelector": "f83ba849142075c91a16090145a5ae9453a3db63db6f4d0320e28649ac4316e5",
            "id": 71,
            "name": "Result",
            "nameLocation": "833:6:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "gameId",
                  "nameLocation": "856:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "840:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "872:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "864:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "864:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "888:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "880:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "880:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "won",
                  "nameLocation": "901:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "896:8:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:66:2"
            },
            "src": "827:79:2"
          },
          {
            "body": {
              "id": 105,
              "nodeType": "Block",
              "src": "1056:180:2",
              "statements": [
                {
                  "expression": {
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "COORDINATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1066:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$492",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85,
                          "name": "_vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "1106:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 84,
                        "name": "VRFCoordinatorV2Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1080:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$492_$",
                          "typeString": "type(contract VRFCoordinatorV2Interface)"
                        }
                      },
                      "id": 86,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1080:42:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$492",
                        "typeString": "contract VRFCoordinatorV2Interface"
                      }
                    },
                    "src": "1066:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$492",
                      "typeString": "contract VRFCoordinatorV2Interface"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:56:2"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1132:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1148:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1148:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1140:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1140:19:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1132:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:27:2"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97,
                      "name": "keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1169:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98,
                      "name": "_keyhash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1179:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1169:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:18:2"
                },
                {
                  "expression": {
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1197:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 102,
                      "name": "_subscriptionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1214:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1197:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:32:2"
                }
              ]
            },
            "id": 106,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "1039:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 81,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79,
                  "name": "VRFConsumerBaseV2",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 396,
                  "src": "1021:17:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:34:2"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "941:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "933:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "933:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_keyhash",
                  "nameLocation": "974:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "966:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_subscriptionId",
                  "nameLocation": "999:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 106,
                  "src": "992:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:97:2"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:2"
            },
            "scope": 338,
            "src": "912:324:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1269:53:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1293:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1293:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1305:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1305:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 109,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1284:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1284:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "EmitStatement",
                  "src": "1279:36:2"
                }
              ]
            },
            "id": 117,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:2:2"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:2"
            },
            "scope": 338,
            "src": "1242:80:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1349:83:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1367:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1367:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1381:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1367:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f74207468652061646d696e",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1388:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e69ad9e3fe9ee4a7c87fc48b849dca2b1a0b72bf882660f86dc86527fbc03243",
                          "typeString": "literal_string \"caller is not the admin\""
                        },
                        "value": "caller is not the admin"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e69ad9e3fe9ee4a7c87fc48b849dca2b1a0b72bf882660f86dc86527fbc03243",
                          "typeString": "literal_string \"caller is not the admin\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1359:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1359:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:55:2"
                },
                {
                  "id": 127,
                  "nodeType": "PlaceholderStatement",
                  "src": "1424:1:2"
                }
              ]
            },
            "id": 129,
            "name": "onlyAdmin",
            "nameLocation": "1337:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:2"
            },
            "src": "1328:104:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "1555:981:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 137,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1573:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1573:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1586:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3135",
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1592:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_15_by_1",
                              "typeString": "int_const 15"
                            },
                            "value": "15"
                          },
                          "src": "1586:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          }
                        },
                        "src": "1573:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a206d696e696d756d20616c6c6f7765642062657420697320302e303031206574686572",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1596:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87be868e3e89c792340e7a2e12f911dd3e08184cb6ef5c13cd3cf17cf011a01f",
                          "typeString": "literal_string \"BettingGame: minimum allowed bet is 0.001 ether\""
                        },
                        "value": "BettingGame: minimum allowed bet is 0.001 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87be868e3e89c792340e7a2e12f911dd3e08184cb6ef5c13cd3cf17cf011a01f",
                          "typeString": "literal_string \"BettingGame: minimum allowed bet is 0.001 ether\""
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1565:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:81:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:81:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 149,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1672:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BettingGame_$338",
                                  "typeString": "contract BettingGame"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BettingGame_$338",
                                  "typeString": "contract BettingGame"
                                }
                              ],
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1664:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 147,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1664:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1664:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1664:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1689:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 153,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1693:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1693:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1689:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1664:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a20696e73756666696369656e74207661756c742062616c616e6365",
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1704:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81669cd8d7d71fc0bbf8c9c4239afb772dcb609bed259ee6d00cf9351543e98",
                          "typeString": "literal_string \"BettingGame: insufficient vault balance\""
                        },
                        "value": "BettingGame: insufficient vault balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81669cd8d7d71fc0bbf8c9c4239afb772dcb609bed259ee6d00cf9351543e98",
                          "typeString": "literal_string \"BettingGame: insufficient vault balance\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1656:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1656:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1656:90:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 161,
                            "name": "randomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "1764:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1764:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1785:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1764:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a2072616e646f6d20776f72647320756e617661696c61626c65",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1788:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9a27b24e79aa83a54c9a2721d53dc0b7abb20c28bedd079b12233bf5c33c895",
                          "typeString": "literal_string \"BettingGame: random words unavailable\""
                        },
                        "value": "BettingGame: random words unavailable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9a27b24e79aa83a54c9a2721d53dc0b7abb20c28bedd079b12233bf5c33c895",
                          "typeString": "literal_string \"BettingGame: random words unavailable\""
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1756:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:72:2"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1839:11:2",
                    "subExpression": {
                      "id": 168,
                      "name": "gameCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1839:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1839:11:2"
                },
                {
                  "expression": {
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 171,
                        "name": "games",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1860:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Game_$45_storage_$",
                          "typeString": "mapping(uint256 => struct BettingGame.Game storage ref)"
                        }
                      },
                      "id": 173,
                      "indexExpression": {
                        "id": 172,
                        "name": "gameCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "1866:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1860:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$45_storage",
                        "typeString": "struct BettingGame.Game storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 175,
                          "name": "gameCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1884:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 176,
                          "name": "_head",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "1895:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "expression": {
                            "id": 177,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1902:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1902:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 181,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1921:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1921:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1913:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 179,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1913:8:2",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1913:19:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 174,
                        "name": "Game",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1879:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Game_$45_storage_ptr_$",
                          "typeString": "type(struct BettingGame.Game storage pointer)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1879:54:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Game_$45_memory_ptr",
                        "typeString": "struct BettingGame.Game memory"
                      }
                    },
                    "src": "1860:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Game_$45_storage",
                      "typeString": "struct BettingGame.Game storage ref"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:73:2"
                },
                {
                  "assignments": [
                    188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 188,
                      "mutability": "mutable",
                      "name": "randomWord",
                      "nameLocation": "1952:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "1944:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1944:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 195,
                  "initialValue": {
                    "baseExpression": {
                      "id": 189,
                      "name": "randomWords",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "1965:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 194,
                    "indexExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 190,
                          "name": "randomWords",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1977:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1977:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1998:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1977:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1965:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1944:56:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 196,
                        "name": "randomWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2010:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "2010:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:17:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 201,
                        "name": "randomWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2081:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2081:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "3230",
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2103:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_20_by_1",
                        "typeString": "int_const 20"
                      },
                      "value": "20"
                    },
                    "src": "2081:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "nodeType": "IfStatement",
                  "src": "2077:75:2",
                  "trueBody": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "2107:45:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 205,
                            "name": "requestRandomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "2121:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2121:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "ExpressionStatement",
                        "src": "2121:20:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 211,
                      "mutability": "mutable",
                      "name": "head",
                      "nameLocation": "2233:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2228:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 210,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2228:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 217,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 212,
                        "name": "randomWord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "2240:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2253:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "2240:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2258:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2240:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2228:31:2"
                },
                {
                  "assignments": [
                    219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "playerWon",
                      "nameLocation": "2274:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 254,
                      "src": "2269:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2269:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 220,
                      "name": "head",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "2286:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 221,
                      "name": "_head",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "2294:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2286:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2269:30:2"
                },
                {
                  "condition": {
                    "id": 224,
                    "name": "playerWon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "2314:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 242,
                  "nodeType": "IfStatement",
                  "src": "2310:126:2",
                  "trueBody": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "2325:111:2",
                    "statements": [
                      {
                        "assignments": [
                          226
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 226,
                            "mutability": "mutable",
                            "name": "winAmount",
                            "nameLocation": "2347:9:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 241,
                            "src": "2339:17:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 225,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2339:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 231,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2359:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 228,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2363:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "2363:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2359:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2339:33:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "winAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "2415:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 234,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2394:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2394:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2386:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 232,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2386:8:2",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2386:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2386:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2386:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "2386:39:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 244,
                        "name": "gameCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "2458:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2469:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2469:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2481:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2481:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 249,
                        "name": "playerWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2492:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 243,
                      "name": "Result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2451:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,uint256,bool)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "EmitStatement",
                  "src": "2446:56:2"
                },
                {
                  "expression": {
                    "id": 252,
                    "name": "playerWon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "2520:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "2513:16:2"
                }
              ]
            },
            "functionSelector": "c23c87d5",
            "id": 255,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "play",
            "nameLocation": "1509:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_head",
                  "nameLocation": "1519:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "1514:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1513:12:2"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "1550:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1549:6:2"
            },
            "scope": 338,
            "src": "1500:1036:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "2589:320:2",
              "statements": [
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "2669:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 275,
                      "src": "2661:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2661:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 264,
                        "name": "keyhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2725:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 265,
                        "name": "subscriptionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2746:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 266,
                        "name": "requestConfirmations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2774:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "id": 267,
                        "name": "callbackGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "2808:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 268,
                        "name": "numWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2838:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 262,
                        "name": "COORDINATOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2681:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$492",
                          "typeString": "contract VRFCoordinatorV2Interface"
                        }
                      },
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestRandomWords",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 425,
                      "src": "2681:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2681:175:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2661:195:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 272,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2892:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 271,
                      "name": "RequestedRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "2872:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2872:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "EmitStatement",
                  "src": "2867:35:2"
                }
              ]
            },
            "functionSelector": "e0c86289",
            "id": 276,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 258,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 257,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "2579:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2579:9:2"
              }
            ],
            "name": "requestRandomWords",
            "nameLocation": "2551:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2569:2:2"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2589:0:2"
            },
            "scope": 338,
            "src": "2542:367:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              369
            ],
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "3033:121:2",
              "statements": [
                {
                  "body": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "3090:58:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 299,
                                "name": "_randomWords",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 281,
                                "src": "3121:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 301,
                              "indexExpression": {
                                "id": 300,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 286,
                                "src": "3134:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3121:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 296,
                              "name": "randomWords",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "3104:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3104:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3104:33:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "3104:33:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 289,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3060:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 290,
                        "name": "_randomWords",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3064:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3064:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3060:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 305,
                  "initializationExpression": {
                    "assignments": [
                      286
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3053:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "3048:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3048:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 288,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3057:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3048:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3085:3:2",
                      "subExpression": {
                        "id": 293,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 286,
                        "src": "3085:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 295,
                    "nodeType": "ExpressionStatement",
                    "src": "3085:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3043:105:2"
                }
              ]
            },
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomWords",
            "nameLocation": "2924:18:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3024:8:2"
            },
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2960:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2952:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_randomWords",
                  "nameLocation": "2996:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "2979:29:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 279,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2979:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 280,
                    "nodeType": "ArrayTypeName",
                    "src": "2979:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2942:72:2"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3033:0:2"
            },
            "scope": 338,
            "src": "2915:239:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "3218:165:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 317,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3244:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BettingGame_$338",
                                  "typeString": "contract BettingGame"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BettingGame_$338",
                                  "typeString": "contract BettingGame"
                                }
                              ],
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3236:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 315,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3236:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3236:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3236:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 320,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "3261:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3236:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42657474696e6747616d653a20696e73756666696369656e742062616c616e6365",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3269:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e1200441559e04faccb6b5c9205d5bae79e6c57e1a9c5a27a7a1e2ae000ad1",
                          "typeString": "literal_string \"BettingGame: insufficient balance\""
                        },
                        "value": "BettingGame: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e1200441559e04faccb6b5c9205d5bae79e6c57e1a9c5a27a7a1e2ae000ad1",
                          "typeString": "literal_string \"BettingGame: insufficient balance\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3228:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3228:77:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:77:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 328,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "3330:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 325,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3315:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3315:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3315:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "3315:22:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 332,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3362:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 333,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "3369:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 331,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "3353:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3353:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "EmitStatement",
                  "src": "3348:28:2"
                }
              ]
            },
            "functionSelector": "3bed33ce",
            "id": 337,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 312,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 311,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 129,
                  "src": "3208:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3208:9:2"
              }
            ],
            "name": "withdrawEther",
            "nameLocation": "3169:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3191:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "3183:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3183:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3182:16:2"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3218:0:2"
            },
            "scope": 338,
            "src": "3160:223:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 339,
        "src": "169:3216:2",
        "usedErrors": [
          347
        ]
      }
    ],
    "src": "0:3386:2"
  },
  "bytecode": "60a060405260038054600160401b600160901b031916709896800000003200030000000000000000179055600060055534801561003b57600080fd5b50604051610b3d380380610b3d83398101604081905261005a916100b3565b6001600160a01b039092166080819052600180546001600160a01b031990811690921790556000805490911633179055600255600380546001600160401b039092166001600160401b031990921691909117905561010e565b6000806000606084860312156100c857600080fd5b83516001600160a01b03811681146100df57600080fd5b6020850151604086015191945092506001600160401b038116811461010357600080fd5b809150509250925092565b608051610a0d610130600039600081816101c001526102020152610a0d6000f3fe6080604052600436106100595760003560e01c8063117a5b901461009a5780631fe543e3146101175780633bed33ce146101395780634d1975b414610159578063c23c87d51461017d578063e0c86289146101a057600080fd5b366100955760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b3480156100a657600080fd5b506100e96100b53660046107e9565b6006602052600090815260409020805460018201546002830154600390930154919260ff909116916001600160a01b031684565b604080519485529215156020850152918301526001600160a01b031660608201526080015b60405180910390f35b34801561012357600080fd5b50610137610132366004610818565b6101b5565b005b34801561014557600080fd5b506101376101543660046107e9565b610242565b34801561016557600080fd5b5061016f60055481565b60405190815260200161010e565b61019061018b3660046108e2565b610374565b604051901515815260200161010e565b3480156101ac57600080fd5b5061013761064f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102345760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61023e8282610793565b5050565b6000546001600160a01b031633146102965760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b604482015260640161022b565b804710156102f05760405162461bcd60e51b815260206004820152602160248201527f42657474696e6747616d653a20696e73756666696369656e742062616c616e636044820152606560f81b606482015260840161022b565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610329573d6000803e3d6000fd5b50600054604080516001600160a01b039092168252602082018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491015b60405180910390a150565b600066038d7ea4c680003410156103e55760405162461bcd60e51b815260206004820152602f60248201527f42657474696e6747616d653a206d696e696d756d20616c6c6f7765642062657460448201526e1034b99018171818189032ba3432b960891b606482015260840161022b565b6103f0346002610921565b47101561044f5760405162461bcd60e51b815260206004820152602760248201527f42657474696e6747616d653a20696e73756666696369656e74207661756c742060448201526662616c616e636560c81b606482015260840161022b565b6004546104ac5760405162461bcd60e51b815260206004820152602560248201527f42657474696e6747616d653a2072616e646f6d20776f72647320756e617661696044820152646c61626c6560d81b606482015260840161022b565b600580549060006104bc83610940565b9091555050604080516080810182526005548082528415156020808401918252348486019081523360608601908152600094855260069092529483209351845590516001808501805460ff1916921515929092179091559351600284015551600390920180546001600160a01b0319166001600160a01b039093169290921790915560048054919290916105509190610959565b8154811061056057610560610970565b90600052602060002001549050600480548061057e5761057e610986565b600190038181906000526020600020016000905590556004805490506014036105a9576105a961064f565b60006105b660028361099c565b159050831515811480156106045760006105d1346002610921565b604051909150339082156108fc029083906000818181858888f19350505050158015610601573d6000803e3d6000fd5b50505b600554604080513381523460208201528315158183015290517ff83ba849142075c91a16090145a5ae9453a3db63db6f4d0320e28649ac4316e59181900360600190a2949350505050565b6000546001600160a01b031633146106a35760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b604482015260640161022b565b6001546002546003546040516305d3b1d360e41b8152600481019290925267ffffffffffffffff8116602483015261ffff68010000000000000000820416604483015263ffffffff600160701b820481166064840152600160501b9091041660848201526000916001600160a01b031690635d3b1d309060a4016020604051808303816000875af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076091906109be565b90507f5d7d0431c4991fcc9f63f03ad0ead4128b866a8ed115a818b6d87a3afedb72648160405161036991815260200190565b60005b81518110156107e45760048282815181106107b3576107b3610970565b60209081029190910181015182546001810184556000938452919092200155806107dc81610940565b915050610796565b505050565b6000602082840312156107fb57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561082b57600080fd5b8235915060208084013567ffffffffffffffff8082111561084b57600080fd5b818601915086601f83011261085f57600080fd5b81358181111561087157610871610802565b8060051b604051601f19603f8301168101818110858211171561089657610896610802565b6040529182528482019250838101850191898311156108b457600080fd5b938501935b828510156108d2578435845293850193928501926108b9565b8096505050505050509250929050565b6000602082840312156108f457600080fd5b8135801515811461090457600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561093b5761093b61090b565b500290565b6000600182016109525761095261090b565b5060010190565b60008282101561096b5761096b61090b565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000826109b957634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156109d057600080fd5b505191905056fea2646970667358221220b23b1ece540080e20a4207df2a877a1b72dd81a24484631ab8a2fb1801939a2e64736f6c634300080f0033",
  "bytecodeSha1": "1f93d2b49846f11c0d4b97f57098e0bc6da1b485",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "BettingGame",
  "coverageMap": {
    "branches": {
      "0": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "23": [
            6717,
            6745,
            false
          ]
        }
      },
      "1": {},
      "2": {
        "BettingGame.play": {
          "20": [
            1573,
            1594,
            true
          ],
          "21": [
            1664,
            1702,
            true
          ],
          "22": [
            2081,
            2105,
            false
          ]
        },
        "BettingGame.withdrawEther": {
          "19": [
            3236,
            3267,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "VRFConsumerBaseV2.rawFulfillRandomWords": {
          "1": [
            6713,
            6822
          ],
          "2": [
            6827,
            6869
          ]
        }
      },
      "1": {},
      "2": {
        "BettingGame.<receive>": {
          "0": [
            1279,
            1315
          ]
        },
        "BettingGame.fulfillRandomWords": {
          "17": [
            3104,
            3137
          ],
          "18": [
            3085,
            3088
          ]
        },
        "BettingGame.play": {
          "6": [
            1565,
            1646
          ],
          "7": [
            1656,
            1746
          ],
          "8": [
            1756,
            1828
          ],
          "9": [
            1839,
            1850
          ],
          "10": [
            1860,
            1933
          ],
          "11": [
            2010,
            2027
          ],
          "12": [
            2121,
            2141
          ],
          "13": [
            2386,
            2425
          ],
          "14": [
            2446,
            2502
          ],
          "15": [
            2513,
            2529
          ]
        },
        "BettingGame.requestRandomWords": {
          "16": [
            2867,
            2902
          ]
        },
        "BettingGame.withdrawEther": {
          "3": [
            3228,
            3305
          ],
          "4": [
            3315,
            3337
          ],
          "5": [
            3348,
            3376
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.4.2/VRFConsumerBaseV2",
    "smartcontractkit/chainlink-brownie-contracts@0.4.2/VRFCoordinatorV2Interface"
  ],
  "deployedBytecode": "6080604052600436106100595760003560e01c8063117a5b901461009a5780631fe543e3146101175780633bed33ce146101395780634d1975b414610159578063c23c87d51461017d578063e0c86289146101a057600080fd5b366100955760405134815233907f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258749060200160405180910390a2005b600080fd5b3480156100a657600080fd5b506100e96100b53660046107e9565b6006602052600090815260409020805460018201546002830154600390930154919260ff909116916001600160a01b031684565b604080519485529215156020850152918301526001600160a01b031660608201526080015b60405180910390f35b34801561012357600080fd5b50610137610132366004610818565b6101b5565b005b34801561014557600080fd5b506101376101543660046107e9565b610242565b34801561016557600080fd5b5061016f60055481565b60405190815260200161010e565b61019061018b3660046108e2565b610374565b604051901515815260200161010e565b3480156101ac57600080fd5b5061013761064f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102345760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61023e8282610793565b5050565b6000546001600160a01b031633146102965760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b604482015260640161022b565b804710156102f05760405162461bcd60e51b815260206004820152602160248201527f42657474696e6747616d653a20696e73756666696369656e742062616c616e636044820152606560f81b606482015260840161022b565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610329573d6000803e3d6000fd5b50600054604080516001600160a01b039092168252602082018390527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436491015b60405180910390a150565b600066038d7ea4c680003410156103e55760405162461bcd60e51b815260206004820152602f60248201527f42657474696e6747616d653a206d696e696d756d20616c6c6f7765642062657460448201526e1034b99018171818189032ba3432b960891b606482015260840161022b565b6103f0346002610921565b47101561044f5760405162461bcd60e51b815260206004820152602760248201527f42657474696e6747616d653a20696e73756666696369656e74207661756c742060448201526662616c616e636560c81b606482015260840161022b565b6004546104ac5760405162461bcd60e51b815260206004820152602560248201527f42657474696e6747616d653a2072616e646f6d20776f72647320756e617661696044820152646c61626c6560d81b606482015260840161022b565b600580549060006104bc83610940565b9091555050604080516080810182526005548082528415156020808401918252348486019081523360608601908152600094855260069092529483209351845590516001808501805460ff1916921515929092179091559351600284015551600390920180546001600160a01b0319166001600160a01b039093169290921790915560048054919290916105509190610959565b8154811061056057610560610970565b90600052602060002001549050600480548061057e5761057e610986565b600190038181906000526020600020016000905590556004805490506014036105a9576105a961064f565b60006105b660028361099c565b159050831515811480156106045760006105d1346002610921565b604051909150339082156108fc029083906000818181858888f19350505050158015610601573d6000803e3d6000fd5b50505b600554604080513381523460208201528315158183015290517ff83ba849142075c91a16090145a5ae9453a3db63db6f4d0320e28649ac4316e59181900360600190a2949350505050565b6000546001600160a01b031633146106a35760405162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329030b236b4b760491b604482015260640161022b565b6001546002546003546040516305d3b1d360e41b8152600481019290925267ffffffffffffffff8116602483015261ffff68010000000000000000820416604483015263ffffffff600160701b820481166064840152600160501b9091041660848201526000916001600160a01b031690635d3b1d309060a4016020604051808303816000875af115801561073c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076091906109be565b90507f5d7d0431c4991fcc9f63f03ad0ead4128b866a8ed115a818b6d87a3afedb72648160405161036991815260200190565b60005b81518110156107e45760048282815181106107b3576107b3610970565b60209081029190910181015182546001810184556000938452919092200155806107dc81610940565b915050610796565b505050565b6000602082840312156107fb57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561082b57600080fd5b8235915060208084013567ffffffffffffffff8082111561084b57600080fd5b818601915086601f83011261085f57600080fd5b81358181111561087157610871610802565b8060051b604051601f19603f8301168101818110858211171561089657610896610802565b6040529182528482019250838101850191898311156108b457600080fd5b938501935b828510156108d2578435845293850193928501926108b9565b8096505050505050509250929050565b6000602082840312156108f457600080fd5b8135801515811461090457600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561093b5761093b61090b565b500290565b6000600182016109525761095261090b565b5060010190565b60008282101561096b5761096b61090b565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6000826109b957634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156109d057600080fd5b505191905056fea2646970667358221220b23b1ece540080e20a4207df2a877a1b72dd81a24484631ab8a2fb1801939a2e64736f6c634300080f0033",
  "deployedSourceMap": "169:3216:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1284:31;;1305:9;160:25:3;;1293:10:2;;1284:31;;148:2:3;133:18;1284:31:2;;;;;;;169:3216;;;;;502:37;;;;;;;;;;-1:-1:-1;502:37:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:37:2;;;;;;;622:25:3;;;690:14;;683:22;678:2;663:18;;656:50;722:18;;;715:34;-1:-1:-1;;;;;785:32:3;780:2;765:18;;758:60;609:3;594:19;502:37:2;;;;;;;;6618:256:0;;;;;;;;;;-1:-1:-1;6618:256:0;;;;;:::i;:::-;;:::i;:::-;;3160:223:2;;;;;;;;;;-1:-1:-1;3160:223:2;;;;;:::i;:::-;;:::i;468:28::-;;;;;;;;;;;;;;;;;;;160:25:3;;;148:2;133:18;468:28:2;14:177:3;1500:1036:2;;;;;;:::i;:::-;;:::i;:::-;;;2592:14:3;;2585:22;2567:41;;2555:2;2540:18;1500:1036:2;2427:187:3;2542:367:2;;;;;;;;;;;;;:::i;6618:256:0:-;6717:10;-1:-1:-1;;;;;6731:14:0;6717:28;;6713:109;;6762:53;;-1:-1:-1;;;6762:53:0;;6788:10;6762:53;;;2831:34:3;-1:-1:-1;;;;;6800:14:0;2901:15:3;2881:18;;;2874:43;2766:18;;6762:53:0;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;3160:223:2:-;1381:5;;-1:-1:-1;;;;;1381:5:2;1367:10;:19;1359:55;;;;-1:-1:-1;;;1359:55:2;;3130:2:3;1359:55:2;;;3112:21:3;3169:2;3149:18;;;3142:30;-1:-1:-1;;;3188:18:3;;;3181:53;3251:18;;1359:55:2;2928:347:3;1359:55:2;3261:6:::1;3236:21;:31;;3228:77;;;::::0;-1:-1:-1;;;3228:77:2;;3482:2:3;3228:77:2::1;::::0;::::1;3464:21:3::0;3521:2;3501:18;;;3494:30;3560:34;3540:18;;;3533:62;-1:-1:-1;;;3611:18:3;;;3604:31;3652:19;;3228:77:2::1;3280:397:3::0;3228:77:2::1;3315:5;::::0;;:22:::1;::::0;-1:-1:-1;;;;;3315:5:2;;::::1;::::0;:22;::::1;;;::::0;3330:6;;3315:22;:5;:22;3330:6;3315:5;:22;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3362:5:2::1;::::0;3353:23:::1;::::0;;-1:-1:-1;;;;;3362:5:2;;::::1;3864:51:3::0;;3946:2;3931:18;;3924:34;;;3353:23:2::1;::::0;3837:18:3;3353:23:2::1;;;;;;;;3160:223:::0;:::o;1500:1036::-;1550:4;1586:8;1573:9;:21;;1565:81;;;;-1:-1:-1;;;1565:81:2;;4171:2:3;1565:81:2;;;4153:21:3;4210:2;4190:18;;;4183:30;4249:34;4229:18;;;4222:62;-1:-1:-1;;;4300:18:3;;;4293:45;4355:19;;1565:81:2;3969:411:3;1565:81:2;1689:13;1693:9;1689:1;:13;:::i;:::-;1664:21;:38;;1656:90;;;;-1:-1:-1;;;1656:90:2;;4892:2:3;1656:90:2;;;4874:21:3;4931:2;4911:18;;;4904:30;4970:34;4950:18;;;4943:62;-1:-1:-1;;;5021:18:3;;;5014:37;5068:19;;1656:90:2;4690:403:3;1656:90:2;1764:11;:18;1756:72;;;;-1:-1:-1;;;1756:72:2;;5300:2:3;1756:72:2;;;5282:21:3;5339:2;5319:18;;;5312:30;5378:34;5358:18;;;5351:62;-1:-1:-1;;;5429:18:3;;;5422:35;5474:19;;1756:72:2;5098:401:3;1756:72:2;1839:9;:11;;;:9;:11;;;:::i;:::-;;;;-1:-1:-1;;1879:54:2;;;;;;;;1884:9;;1879:54;;;;;;;;;;;;;1902:9;1879:54;;;;;;1921:10;1879:54;;;;;;-1:-1:-1;1860:16:2;;;:5;:16;;;;;;:73;;;;;;;;;;;;-1:-1:-1;;1860:73:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1860:73:2;-1:-1:-1;;;;;1860:73:2;;;;;;;;;;1965:11;1977:18;;-1:-1:-1;;1965:11:2;;1977:22;;1860:73;1977:22;:::i;:::-;1965:35;;;;;;;;:::i;:::-;;;;;;;;;1944:56;;2010:11;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2081:11;:18;;;;2103:2;2081:24;2077:75;;2121:20;:18;:20::i;:::-;2228:9;2240:14;2253:1;2240:10;:14;:::i;:::-;:19;;-1:-1:-1;2286:13:2;;;;;2310:126;;;;2339:17;2359:13;2363:9;2359:1;:13;:::i;:::-;2386:39;;2339:33;;-1:-1:-1;2394:10:2;;2386:39;;;;;2339:33;;2386:39;;;;2339:33;2394:10;2386:39;;;;;;;;;;;;;;;;;;;;;2325:111;2310:126;2458:9;;2451:51;;;2469:10;6448:51:3;;2481:9:2;6530:2:3;6515:18;;6508:34;6585:14;;6578:22;6558:18;;;6551:50;2451:51:2;;;;;;;6436:2:3;2451:51:2;;;2520:9;1500:1036;-1:-1:-1;;;;1500:1036:2:o;2542:367::-;1381:5;;-1:-1:-1;;;;;1381:5:2;1367:10;:19;1359:55;;;;-1:-1:-1;;;1359:55:2;;3130:2:3;1359:55:2;;;3112:21:3;3169:2;3149:18;;;3142:30;-1:-1:-1;;;3188:18:3;;;3181:53;3251:18;;1359:55:2;2928:347:3;1359:55:2;2681:11:::1;::::0;2725:7:::1;::::0;2746:14:::1;::::0;2681:175:::1;::::0;-1:-1:-1;;;2681:175:2;;::::1;::::0;::::1;6863:25:3::0;;;;2746:14:2::1;::::0;::::1;6904:18:3::0;;;6897:59;2774:20:2::1;::::0;;::::1;;6972:18:3::0;;;6965:47;2808:16:2::1;-1:-1:-1::0;;;2808:16:2;::::1;::::0;::::1;7057:18:3::0;;;7050:43;-1:-1:-1;;;2838:8:2;;::::1;;7109:19:3::0;;;7102:44;-1:-1:-1;;;;;;;2681:11:2::1;::::0;:30:::1;::::0;6835:19:3;;2681:175:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2661:195;;2872:30;2892:9;2872:30;;;;160:25:3::0;;148:2;133:18;;14:177;2915:239:2;3048:6;3043:105;3064:12;:19;3060:1;:23;3043:105;;;3104:11;3121:12;3134:1;3121:15;;;;;;;;:::i;:::-;;;;;;;;;;;;3104:33;;;;;;;-1:-1:-1;3104:33:2;;;;;;;;;3085:3;;;;:::i;:::-;;;;3043:105;;;;2915:239;;:::o;196:180:3:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:3;;196:180;-1:-1:-1;196:180:3:o;829:127::-;890:10;885:3;881:20;878:1;871:31;921:4;918:1;911:15;945:4;942:1;935:15;961:1183;1054:6;1062;1115:2;1103:9;1094:7;1090:23;1086:32;1083:52;;;1131:1;1128;1121:12;1083:52;1167:9;1154:23;1144:33;;1196:2;1249;1238:9;1234:18;1221:32;1272:18;1313:2;1305:6;1302:14;1299:34;;;1329:1;1326;1319:12;1299:34;1367:6;1356:9;1352:22;1342:32;;1412:7;1405:4;1401:2;1397:13;1393:27;1383:55;;1434:1;1431;1424:12;1383:55;1470:2;1457:16;1492:2;1488;1485:10;1482:36;;;1498:18;;:::i;:::-;1544:2;1541:1;1537:10;1576:2;1570:9;1639:2;1635:7;1630:2;1626;1622:11;1618:25;1610:6;1606:38;1694:6;1682:10;1679:22;1674:2;1662:10;1659:18;1656:46;1653:72;;;1705:18;;:::i;:::-;1741:2;1734:22;1791:18;;;1825:15;;;;-1:-1:-1;1867:11:3;;;1863:20;;;1895:19;;;1892:39;;;1927:1;1924;1917:12;1892:39;1951:11;;;;1971:142;1987:6;1982:3;1979:15;1971:142;;;2053:17;;2041:30;;2004:12;;;;2091;;;;1971:142;;;2132:6;2122:16;;;;;;;;961:1183;;;;;:::o;2149:273::-;2205:6;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;2313:9;2300:23;2366:5;2359:13;2352:21;2345:5;2342:32;2332:60;;2388:1;2385;2378:12;2332:60;2411:5;2149:273;-1:-1:-1;;;2149:273:3:o;4385:127::-;4446:10;4441:3;4437:20;4434:1;4427:31;4477:4;4474:1;4467:15;4501:4;4498:1;4491:15;4517:168;4557:7;4623:1;4619;4615:6;4611:14;4608:1;4605:21;4600:1;4593:9;4586:17;4582:45;4579:71;;;4630:18;;:::i;:::-;-1:-1:-1;4670:9:3;;4517:168::o;5504:135::-;5543:3;5564:17;;;5561:43;;5584:18;;:::i;:::-;-1:-1:-1;5631:1:3;5620:13;;5504:135::o;5644:125::-;5684:4;5712:1;5709;5706:8;5703:34;;;5717:18;;:::i;:::-;-1:-1:-1;5754:9:3;;5644:125::o;5774:127::-;5835:10;5830:3;5826:20;5823:1;5816:31;5866:4;5863:1;5856:15;5890:4;5887:1;5880:15;5906:127;5967:10;5962:3;5958:20;5955:1;5948:31;5998:4;5995:1;5988:15;6022:4;6019:1;6012:15;6038:209;6070:1;6096;6086:132;;6140:10;6135:3;6131:20;6128:1;6121:31;6175:4;6172:1;6165:15;6203:4;6200:1;6193:15;6086:132;-1:-1:-1;6232:9:3;;6038:209::o;7157:184::-;7227:6;7280:2;7268:9;7259:7;7255:23;7251:32;7248:52;;;7296:1;7293;7286:12;7248:52;-1:-1:-1;7319:16:3;;7157:184;-1:-1:-1;7157:184:3:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    169,
    3385
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x117A5B90 EQ PUSH2 0x9A JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x3BED33CE EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x4D1975B4 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xC23C87D5 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xE0C86289 EQ PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x95 JUMPI PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0xB5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0xFF SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x242 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x64F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23E DUP3 DUP3 PUSH2 0x793 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x296 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x31B0B63632B91034B9903737BA103A34329030B236B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22B JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A20696E73756666696369656E742062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x329 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0x38D7EA4C68000 CALLVALUE LT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A206D696E696D756D20616C6C6F77656420626574 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x1034B99018171818189032BA3432B9 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22B JUMP JUMPDEST PUSH2 0x3F0 CALLVALUE PUSH1 0x2 PUSH2 0x921 JUMP JUMPDEST SELFBALANCE LT ISZERO PUSH2 0x44F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A20696E73756666696369656E74207661756C7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42657474696E6747616D653A2072616E646F6D20776F72647320756E61766169 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C61626C65 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x4BC DUP4 PUSH2 0x940 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SLOAD DUP1 DUP3 MSTORE DUP5 ISZERO ISZERO PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE CALLVALUE DUP5 DUP7 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x60 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x6 SWAP1 SWAP3 MSTORE SWAP5 DUP4 KECCAK256 SWAP4 MLOAD DUP5 SSTORE SWAP1 MLOAD PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP4 MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x959 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x560 JUMPI PUSH2 0x560 PUSH2 0x970 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x986 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH1 0x14 SUB PUSH2 0x5A9 JUMPI PUSH2 0x5A9 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6 PUSH1 0x2 DUP4 PUSH2 0x99C JUMP JUMPDEST ISZERO SWAP1 POP DUP4 ISZERO ISZERO DUP2 EQ DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 PUSH2 0x5D1 CALLVALUE PUSH1 0x2 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x601 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE DUP4 ISZERO ISZERO DUP2 DUP4 ADD MSTORE SWAP1 MLOAD PUSH32 0xF83BA849142075C91A16090145A5AE9453A3DB63DB6F4D0320E28649AC4316E5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG2 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x31B0B63632B91034B9903737BA103A34329030B236B4B7 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0xFFFF PUSH9 0x10000000000000000 DUP3 DIV AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x70 SHL DUP3 DIV DUP2 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x50 SHL SWAP1 SWAP2 DIV AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0x9BE JUMP JUMPDEST SWAP1 POP PUSH32 0x5D7D0431C4991FCC9F63F03AD0EAD4128B866A8ED115A818B6D87A3AFEDB7264 DUP2 PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7B3 JUMPI PUSH2 0x7B3 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x7DC DUP2 PUSH2 0x940 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x796 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x82B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x85F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x871 JUMPI PUSH2 0x871 PUSH2 0x802 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x896 JUMPI PUSH2 0x896 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x8D2 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x8B9 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x93B JUMPI PUSH2 0x93B PUSH2 0x90B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x952 JUMPI PUSH2 0x952 PUSH2 0x90B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96B PUSH2 0x90B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9B9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 EXTCODESIZE 0x1E 0xCE SLOAD STOP DUP1 0xE2 EXP TIMESTAMP SMOD 0xDF 0x2A DUP8 PUSH27 0x1B72DD81A24484631AB8A2FB1801939A2E64736F6C634300080F00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59"
    },
    "12": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x117A5B90"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "EQ",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FE543E3"
    },
    "36": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "EQ",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117"
    },
    "40": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3BED33CE"
    },
    "47": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x139"
    },
    "51": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4D1975B4"
    },
    "58": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x159"
    },
    "62": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC23C87D5"
    },
    "69": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17D"
    },
    "73": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE0C86289"
    },
    "80": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0"
    },
    "84": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "REVERT",
      "path": "2"
    },
    "89": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "90": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "91": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95"
    },
    "94": {
      "fn": null,
      "offset": [
        169,
        3385
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "95": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x40"
    },
    "97": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "98": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1305,
        1314
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "99": {
      "op": "DUP2"
    },
    "100": {
      "op": "MSTORE"
    },
    "101": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1293,
        1303
      ],
      "op": "CALLER",
      "path": "2"
    },
    "102": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1293,
        1303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "103": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "136": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "137": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "139": {
      "op": "ADD"
    },
    "140": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "142": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "143": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "DUP1",
      "path": "2"
    },
    "144": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "145": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "SUB",
      "path": "2"
    },
    "146": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "147": {
      "fn": "BettingGame.<receive>",
      "offset": [
        1284,
        1315
      ],
      "op": "LOG2",
      "path": "2"
    },
    "148": {
      "offset": [
        169,
        3385
      ],
      "op": "STOP",
      "path": "2"
    },
    "149": {
      "fn": "BettingGame.<receive>",
      "offset": [
        169,
        3385
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "150": {
      "fn": "BettingGame.<receive>",
      "offset": [
        169,
        3385
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "152": {
      "fn": "BettingGame.<receive>",
      "offset": [
        169,
        3385
      ],
      "op": "DUP1",
      "path": "2"
    },
    "153": {
      "first_revert": true,
      "fn": "BettingGame.<receive>",
      "offset": [
        169,
        3385
      ],
      "op": "REVERT",
      "path": "2"
    },
    "154": {
      "offset": [
        502,
        539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "155": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "156": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "158": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6"
    },
    "161": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "162": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "164": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "165": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "REVERT",
      "path": "2"
    },
    "166": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "167": {
      "op": "POP"
    },
    "168": {
      "offset": [
        502,
        539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9"
    },
    "171": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB5"
    },
    "174": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "175": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "177": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E9"
    },
    "180": {
      "fn": "BettingGame.<receive>",
      "jump": "i",
      "offset": [
        502,
        539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "181": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "182": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "184": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "186": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "187": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "189": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "190": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP2",
      "path": "2"
    },
    "191": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "192": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "194": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "195": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "196": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "198": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "200": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP3",
      "path": "2"
    },
    "201": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "ADD",
      "path": "2"
    },
    "202": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "203": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "205": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP4",
      "path": "2"
    },
    "206": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "ADD",
      "path": "2"
    },
    "207": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "208": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "210": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "211": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "212": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "ADD",
      "path": "2"
    },
    "213": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "214": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "215": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "216": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "218": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "219": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "220": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "AND",
      "path": "2"
    },
    "221": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "228": {
      "op": "SHL"
    },
    "229": {
      "op": "SUB"
    },
    "230": {
      "offset": [
        502,
        539
      ],
      "op": "AND",
      "path": "2"
    },
    "231": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP5",
      "path": "2"
    },
    "232": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "233": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "234": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "236": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "237": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "238": {
      "op": "SWAP5"
    },
    "239": {
      "op": "DUP6"
    },
    "240": {
      "op": "MSTORE"
    },
    "241": {
      "op": "SWAP3"
    },
    "242": {
      "op": "ISZERO"
    },
    "243": {
      "op": "ISZERO"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "246": {
      "op": "DUP6"
    },
    "247": {
      "op": "ADD"
    },
    "248": {
      "op": "MSTORE"
    },
    "249": {
      "op": "SWAP2"
    },
    "250": {
      "op": "DUP4"
    },
    "251": {
      "op": "ADD"
    },
    "252": {
      "op": "MSTORE"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "259": {
      "op": "SHL"
    },
    "260": {
      "op": "SUB"
    },
    "261": {
      "op": "AND"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "264": {
      "op": "DUP3"
    },
    "265": {
      "op": "ADD"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "offset": [
        502,
        539
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "271": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "273": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "274": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "DUP1",
      "path": "2"
    },
    "275": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "276": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SUB",
      "path": "2"
    },
    "277": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "278": {
      "fn": "BettingGame.<receive>",
      "offset": [
        502,
        539
      ],
      "op": "RETURN",
      "path": "2"
    },
    "279": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "281": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "282": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "283": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x123"
    },
    "286": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "287": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "289": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "DUP1",
      "path": "0"
    },
    "290": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "REVERT",
      "path": "0"
    },
    "291": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "292": {
      "op": "POP"
    },
    "293": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137"
    },
    "296": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "299": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "300": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "302": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x818"
    },
    "305": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "306": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B5"
    },
    "310": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "311": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "312": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "STOP",
      "path": "0"
    },
    "313": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "314": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "315": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "DUP1",
      "path": "2"
    },
    "316": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "317": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x145"
    },
    "320": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "321": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "323": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "DUP1",
      "path": "2"
    },
    "324": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "REVERT",
      "path": "2"
    },
    "325": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137"
    },
    "330": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x154"
    },
    "333": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "334": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "336": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E9"
    },
    "339": {
      "fn": "BettingGame.withdrawEther",
      "jump": "i",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMP",
      "path": "2"
    },
    "340": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "341": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x242"
    },
    "344": {
      "fn": "BettingGame.withdrawEther",
      "jump": "i",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMP",
      "path": "2"
    },
    "345": {
      "offset": [
        468,
        496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "346": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "347": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "348": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "349": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x165"
    },
    "352": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "353": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "355": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "DUP1",
      "path": "2"
    },
    "356": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "REVERT",
      "path": "2"
    },
    "357": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "358": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "POP",
      "path": "2"
    },
    "359": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16F"
    },
    "362": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "364": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "365": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "366": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "JUMP",
      "path": "2"
    },
    "367": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "368": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "370": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        468,
        496
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "371": {
      "op": "SWAP1"
    },
    "372": {
      "op": "DUP2"
    },
    "373": {
      "op": "MSTORE"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "376": {
      "op": "ADD"
    },
    "377": {
      "offset": [
        468,
        496
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E"
    },
    "380": {
      "op": "JUMP"
    },
    "381": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "382": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x190"
    },
    "385": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B"
    },
    "388": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "389": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "391": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E2"
    },
    "394": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "395": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "396": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x374"
    },
    "399": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "400": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "401": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "403": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "404": {
      "op": "SWAP1"
    },
    "405": {
      "op": "ISZERO"
    },
    "406": {
      "op": "ISZERO"
    },
    "407": {
      "op": "DUP2"
    },
    "408": {
      "op": "MSTORE"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "op": "ADD"
    },
    "412": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E"
    },
    "415": {
      "op": "JUMP"
    },
    "416": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "417": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "418": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "DUP1",
      "path": "2"
    },
    "419": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "420": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC"
    },
    "423": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "424": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "426": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "DUP1",
      "path": "2"
    },
    "427": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "REVERT",
      "path": "2"
    },
    "428": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "429": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "POP",
      "path": "2"
    },
    "430": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x137"
    },
    "433": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64F"
    },
    "436": {
      "fn": "BettingGame.requestRandomWords",
      "jump": "i",
      "offset": [
        2542,
        2909
      ],
      "op": "JUMP",
      "path": "2"
    },
    "437": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "438": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6727
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 1
    },
    "439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "445": {
      "op": "SHL"
    },
    "446": {
      "op": "SUB"
    },
    "447": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6731,
        6745
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "480": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6745
      ],
      "op": "AND",
      "path": "0"
    },
    "481": {
      "branch": 23,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6717,
        6745
      ],
      "op": "EQ",
      "path": "0"
    },
    "482": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x234"
    },
    "485": {
      "branch": 23,
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "486": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "488": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "489": {
      "op": "PUSH4",
      "value": "0x73E64FD"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP2",
      "path": "0"
    },
    "498": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "499": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6788,
        6798
      ],
      "op": "CALLER",
      "path": "0"
    },
    "500": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "502": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP3",
      "path": "0"
    },
    "503": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "ADD",
      "path": "0"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6800,
        6814
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x0"
    },
    "546": {
      "op": "AND"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "549": {
      "op": "DUP3"
    },
    "550": {
      "op": "ADD"
    },
    "551": {
      "op": "MSTORE"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "554": {
      "op": "ADD"
    },
    "555": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "558": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "559": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "DUP1",
      "path": "0"
    },
    "560": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "561": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "SUB",
      "path": "0"
    },
    "562": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6762,
        6815
      ],
      "op": "REVERT",
      "path": "0"
    },
    "564": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6713,
        6822
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "565": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6869
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x23E"
    },
    "568": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6846,
        6855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "569": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6857,
        6868
      ],
      "op": "DUP3",
      "path": "0"
    },
    "570": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6845
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x793"
    },
    "573": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "i",
      "offset": [
        6827,
        6869
      ],
      "op": "JUMP",
      "path": "0"
    },
    "574": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6827,
        6869
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "575": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "POP",
      "path": "0"
    },
    "576": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "offset": [
        6618,
        6874
      ],
      "op": "POP",
      "path": "0"
    },
    "577": {
      "fn": "VRFConsumerBaseV2.rawFulfillRandomWords",
      "jump": "o",
      "offset": [
        6618,
        6874
      ],
      "op": "JUMP",
      "path": "0"
    },
    "578": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "579": {
      "offset": [
        1381,
        1386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "581": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1381,
        1386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "588": {
      "op": "SHL"
    },
    "589": {
      "op": "SUB"
    },
    "590": {
      "offset": [
        1381,
        1386
      ],
      "op": "AND",
      "path": "2"
    },
    "591": {
      "offset": [
        1367,
        1377
      ],
      "op": "CALLER",
      "path": "2"
    },
    "592": {
      "offset": [
        1367,
        1386
      ],
      "op": "EQ",
      "path": "2"
    },
    "593": {
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x296"
    },
    "596": {
      "offset": [
        1359,
        1414
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "597": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "599": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1359,
        1414
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "600": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "604": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "606": {
      "op": "SHL"
    },
    "607": {
      "offset": [
        1359,
        1414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "608": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1359,
        1414
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "611": {
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "613": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1359,
        1414
      ],
      "op": "DUP3",
      "path": "2"
    },
    "614": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        1359,
        1414
      ],
      "op": "ADD",
      "path": "2"
    },
    "615": {
      "op": "MSTORE"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "620": {
      "op": "DUP3"
    },
    "621": {
      "op": "ADD"
    },
    "622": {
      "op": "MSTORE"
    },
    "623": {
      "op": "PUSH23",
      "value": "0x31B0B63632B91034B9903737BA103A34329030B236B4B7"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "652": {
      "op": "DUP3"
    },
    "653": {
      "op": "ADD"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "661": {
      "op": "JUMP"
    },
    "662": {
      "offset": [
        1359,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "663": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3261,
        3267
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 3
    },
    "664": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3236,
        3257
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "665": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3236,
        3267
      ],
      "op": "LT",
      "path": "2"
    },
    "666": {
      "branch": 19,
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3236,
        3267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "667": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F0"
    },
    "670": {
      "branch": 19,
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "671": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "673": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "674": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "678": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "680": {
      "op": "SHL"
    },
    "681": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "DUP2",
      "path": "2"
    },
    "682": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "685": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "687": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "DUP3",
      "path": "2"
    },
    "688": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "ADD",
      "path": "2"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "692": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "694": {
      "op": "DUP3"
    },
    "695": {
      "op": "ADD"
    },
    "696": {
      "op": "MSTORE"
    },
    "697": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A20696E73756666696369656E742062616C616E63"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "732": {
      "op": "DUP3"
    },
    "733": {
      "op": "ADD"
    },
    "734": {
      "op": "MSTORE"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "751": {
      "op": "JUMP"
    },
    "752": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3228,
        3305
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "753": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x0"
    },
    "755": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "756": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "757": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "759": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "766": {
      "op": "SHL"
    },
    "767": {
      "op": "SUB"
    },
    "768": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "769": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "770": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "AND",
      "path": "2"
    },
    "771": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "772": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "DUP4",
      "path": "2"
    },
    "773": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "774": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "777": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "MUL",
      "path": "2"
    },
    "778": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "779": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3330,
        3336
      ],
      "op": "DUP5",
      "path": "2"
    },
    "780": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3330,
        3336
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "781": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "782": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "783": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "DUP2",
      "path": "2"
    },
    "784": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3330,
        3336
      ],
      "op": "DUP6",
      "path": "2"
    },
    "785": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3320
      ],
      "op": "DUP9",
      "path": "2"
    },
    "786": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "DUP9",
      "path": "2"
    },
    "787": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "CALL",
      "path": "2"
    },
    "788": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "789": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "POP",
      "path": "2"
    },
    "790": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "POP",
      "path": "2"
    },
    "791": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "POP",
      "path": "2"
    },
    "792": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "POP",
      "path": "2"
    },
    "793": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "794": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "795": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "796": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x329"
    },
    "799": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "800": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "801": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "803": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "804": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "805": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "806": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "808": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "REVERT",
      "path": "2"
    },
    "809": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3315,
        3337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "810": {
      "op": "POP"
    },
    "811": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3362,
        3367
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "813": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3362,
        3367
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "814": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "816": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "817": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "822": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "824": {
      "op": "SHL"
    },
    "825": {
      "op": "SUB"
    },
    "826": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3362,
        3367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "827": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3362,
        3367
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "828": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3362,
        3367
      ],
      "op": "AND",
      "path": "2"
    },
    "829": {
      "op": "DUP3"
    },
    "830": {
      "op": "MSTORE"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "833": {
      "op": "DUP3"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "op": "DUP4"
    },
    "836": {
      "op": "SWAP1"
    },
    "837": {
      "op": "MSTORE"
    },
    "838": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
    },
    "871": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "874": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "876": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "877": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "878": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "879": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "SUB",
      "path": "2"
    },
    "880": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "881": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3353,
        3376
      ],
      "op": "LOG1",
      "path": "2"
    },
    "882": {
      "fn": "BettingGame.withdrawEther",
      "offset": [
        3160,
        3383
      ],
      "op": "POP",
      "path": "2"
    },
    "883": {
      "fn": "BettingGame.withdrawEther",
      "jump": "o",
      "offset": [
        3160,
        3383
      ],
      "op": "JUMP",
      "path": "2"
    },
    "884": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "885": {
      "fn": "BettingGame.play",
      "offset": [
        1550,
        1554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "887": {
      "fn": "BettingGame.play",
      "offset": [
        1586,
        1594
      ],
      "op": "PUSH7",
      "path": "2",
      "statement": 6,
      "value": "0x38D7EA4C68000"
    },
    "895": {
      "fn": "BettingGame.play",
      "offset": [
        1573,
        1582
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "896": {
      "fn": "BettingGame.play",
      "offset": [
        1573,
        1594
      ],
      "op": "LT",
      "path": "2"
    },
    "897": {
      "branch": 20,
      "fn": "BettingGame.play",
      "offset": [
        1573,
        1594
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "898": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E5"
    },
    "901": {
      "branch": 20,
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "902": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "904": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "DUP2",
      "path": "2"
    },
    "913": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "916": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "918": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "DUP3",
      "path": "2"
    },
    "919": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "ADD",
      "path": "2"
    },
    "920": {
      "op": "MSTORE"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A206D696E696D756D20616C6C6F77656420626574"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH15",
      "value": "0x1034B99018171818189032BA3432B9"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "984": {
      "op": "SHL"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "987": {
      "op": "DUP3"
    },
    "988": {
      "op": "ADD"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "992": {
      "op": "ADD"
    },
    "993": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "996": {
      "op": "JUMP"
    },
    "997": {
      "fn": "BettingGame.play",
      "offset": [
        1565,
        1646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "998": {
      "fn": "BettingGame.play",
      "offset": [
        1689,
        1702
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 7,
      "value": "0x3F0"
    },
    "1001": {
      "fn": "BettingGame.play",
      "offset": [
        1693,
        1702
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1002": {
      "fn": "BettingGame.play",
      "offset": [
        1689,
        1690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1004": {
      "fn": "BettingGame.play",
      "offset": [
        1689,
        1702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x921"
    },
    "1007": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1689,
        1702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1008": {
      "fn": "BettingGame.play",
      "offset": [
        1689,
        1702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1009": {
      "fn": "BettingGame.play",
      "offset": [
        1664,
        1685
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "1010": {
      "fn": "BettingGame.play",
      "offset": [
        1664,
        1702
      ],
      "op": "LT",
      "path": "2"
    },
    "1011": {
      "branch": 21,
      "fn": "BettingGame.play",
      "offset": [
        1664,
        1702
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1012": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44F"
    },
    "1015": {
      "branch": 21,
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1016": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1018": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1027": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1030": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1032": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1033": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "ADD",
      "path": "2"
    },
    "1034": {
      "op": "MSTORE"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1039": {
      "op": "DUP3"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A20696E73756666696369656E74207661756C7420"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1077": {
      "op": "DUP3"
    },
    "1078": {
      "op": "ADD"
    },
    "1079": {
      "op": "MSTORE"
    },
    "1080": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "1090": {
      "op": "SHL"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1093": {
      "op": "DUP3"
    },
    "1094": {
      "op": "ADD"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "1102": {
      "op": "JUMP"
    },
    "1103": {
      "fn": "BettingGame.play",
      "offset": [
        1656,
        1746
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1104": {
      "fn": "BettingGame.play",
      "offset": [
        1764,
        1775
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x4"
    },
    "1106": {
      "fn": "BettingGame.play",
      "offset": [
        1764,
        1782
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1107": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1110": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1111": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1113": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1122": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1125": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1127": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1128": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "ADD",
      "path": "2"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1134": {
      "op": "DUP3"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "op": "MSTORE"
    },
    "1137": {
      "op": "PUSH32",
      "value": "0x42657474696E6747616D653A2072616E646F6D20776F72647320756E61766169"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1172": {
      "op": "DUP3"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "MSTORE"
    },
    "1175": {
      "op": "PUSH5",
      "value": "0x6C61626C65"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "BettingGame.play",
      "offset": [
        1756,
        1828
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1848
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x5"
    },
    "1199": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1200": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1201": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1202": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1204": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "1207": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1208": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x940"
    },
    "1211": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1839,
        1850
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1212": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1214": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1215": {
      "fn": "BettingGame.play",
      "offset": [
        1839,
        1850
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1216": {
      "op": "POP"
    },
    "1217": {
      "op": "POP"
    },
    "1218": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x40"
    },
    "1220": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1221": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1222": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "1224": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1225": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1226": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1227": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1228": {
      "fn": "BettingGame.play",
      "offset": [
        1884,
        1893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1230": {
      "fn": "BettingGame.play",
      "offset": [
        1884,
        1893
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1231": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1232": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1233": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1234": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1235": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1236": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1237": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1239": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1240": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1241": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1242": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1243": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1244": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1245": {
      "fn": "BettingGame.play",
      "offset": [
        1902,
        1911
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1246": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1247": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1248": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1249": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1250": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1251": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1252": {
      "fn": "BettingGame.play",
      "offset": [
        1921,
        1931
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1253": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1255": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1256": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1257": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1258": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1259": {
      "fn": "BettingGame.play",
      "offset": [
        1879,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1262": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1263": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1264": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1265": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1267": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1268": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1269": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1270": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1271": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1272": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1876
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1273": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1274": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1275": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1276": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1277": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1278": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1279": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1281": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1282": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1283": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1284": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1285": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1288": {
      "op": "NOT"
    },
    "1289": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "AND",
      "path": "2"
    },
    "1290": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1291": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1292": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1293": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1294": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1295": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1296": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "OR",
      "path": "2"
    },
    "1297": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1298": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1299": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1300": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1301": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1302": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1304": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1305": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1306": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1307": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1308": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1310": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1311": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1312": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "ADD",
      "path": "2"
    },
    "1313": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1314": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1321": {
      "op": "SHL"
    },
    "1322": {
      "op": "SUB"
    },
    "1323": {
      "op": "NOT"
    },
    "1324": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "AND",
      "path": "2"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1331": {
      "op": "SHL"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1334": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1335": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "AND",
      "path": "2"
    },
    "1336": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1337": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1338": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1339": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "OR",
      "path": "2"
    },
    "1340": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1341": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1342": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1343": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        1976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1345": {
      "fn": "BettingGame.play",
      "offset": [
        1977,
        1995
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1346": {
      "fn": "BettingGame.play",
      "offset": [
        1977,
        1995
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1347": {
      "op": "SWAP2"
    },
    "1348": {
      "op": "SWAP3"
    },
    "1349": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        1976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1350": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        1976
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1351": {
      "fn": "BettingGame.play",
      "offset": [
        1977,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x550"
    },
    "1354": {
      "fn": "BettingGame.play",
      "offset": [
        1977,
        1999
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1355": {
      "fn": "BettingGame.play",
      "offset": [
        1860,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1356": {
      "fn": "BettingGame.play",
      "offset": [
        1977,
        1999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x959"
    },
    "1359": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1977,
        1999
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1360": {
      "fn": "BettingGame.play",
      "offset": [
        1977,
        1999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1361": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1362": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1363": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1364": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "LT",
      "path": "2"
    },
    "1365": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x560"
    },
    "1368": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1369": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x560"
    },
    "1372": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x970"
    },
    "1375": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        1965,
        2000
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1376": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1377": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1378": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1380": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1381": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1383": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1385": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1386": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "ADD",
      "path": "2"
    },
    "1387": {
      "fn": "BettingGame.play",
      "offset": [
        1965,
        2000
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1388": {
      "fn": "BettingGame.play",
      "offset": [
        1944,
        2000
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1389": {
      "fn": "BettingGame.play",
      "offset": [
        1944,
        2000
      ],
      "op": "POP",
      "path": "2"
    },
    "1390": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 11,
      "value": "0x4"
    },
    "1392": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1393": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1394": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1395": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57E"
    },
    "1398": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1399": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57E"
    },
    "1402": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x986"
    },
    "1405": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        2010,
        2027
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1406": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1407": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1409": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1410": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SUB",
      "path": "2"
    },
    "1411": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1412": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1413": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1414": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1416": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1417": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1419": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1421": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1422": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "ADD",
      "path": "2"
    },
    "1423": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1425": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1426": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1427": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1428": {
      "fn": "BettingGame.play",
      "offset": [
        2010,
        2027
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1429": {
      "fn": "BettingGame.play",
      "offset": [
        2081,
        2092
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1431": {
      "fn": "BettingGame.play",
      "offset": [
        2081,
        2099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1432": {
      "fn": "BettingGame.play",
      "offset": [
        2081,
        2099
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1433": {
      "fn": "BettingGame.play",
      "offset": [
        2081,
        2099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1434": {
      "fn": "BettingGame.play",
      "offset": [
        2081,
        2099
      ],
      "op": "POP",
      "path": "2"
    },
    "1435": {
      "fn": "BettingGame.play",
      "offset": [
        2103,
        2105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "1437": {
      "branch": 22,
      "fn": "BettingGame.play",
      "offset": [
        2081,
        2105
      ],
      "op": "SUB",
      "path": "2"
    },
    "1438": {
      "fn": "BettingGame.play",
      "offset": [
        2077,
        2152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A9"
    },
    "1441": {
      "branch": 22,
      "fn": "BettingGame.play",
      "offset": [
        2077,
        2152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1442": {
      "fn": "BettingGame.play",
      "offset": [
        2121,
        2141
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x5A9"
    },
    "1445": {
      "fn": "BettingGame.play",
      "offset": [
        2121,
        2139
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64F"
    },
    "1448": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        2121,
        2141
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1449": {
      "fn": "BettingGame.play",
      "offset": [
        2121,
        2141
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1450": {
      "fn": "BettingGame.play",
      "offset": [
        2228,
        2237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1452": {
      "fn": "BettingGame.play",
      "offset": [
        2240,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B6"
    },
    "1455": {
      "fn": "BettingGame.play",
      "offset": [
        2253,
        2254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1457": {
      "fn": "BettingGame.play",
      "offset": [
        2240,
        2250
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1458": {
      "fn": "BettingGame.play",
      "offset": [
        2240,
        2254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x99C"
    },
    "1461": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        2240,
        2254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1462": {
      "fn": "BettingGame.play",
      "offset": [
        2240,
        2254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1463": {
      "fn": "BettingGame.play",
      "offset": [
        2240,
        2259
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1464": {
      "fn": "BettingGame.play",
      "offset": [
        2240,
        2259
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1465": {
      "op": "POP"
    },
    "1466": {
      "fn": "BettingGame.play",
      "offset": [
        2286,
        2299
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1467": {
      "fn": "BettingGame.play",
      "offset": [
        2286,
        2299
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1468": {
      "fn": "BettingGame.play",
      "offset": [
        2286,
        2299
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1469": {
      "fn": "BettingGame.play",
      "offset": [
        2286,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1470": {
      "fn": "BettingGame.play",
      "offset": [
        2286,
        2299
      ],
      "op": "EQ",
      "path": "2"
    },
    "1471": {
      "fn": "BettingGame.play",
      "offset": [
        2310,
        2436
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1472": {
      "fn": "BettingGame.play",
      "offset": [
        2310,
        2436
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1473": {
      "fn": "BettingGame.play",
      "offset": [
        2310,
        2436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x604"
    },
    "1476": {
      "fn": "BettingGame.play",
      "offset": [
        2310,
        2436
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1477": {
      "fn": "BettingGame.play",
      "offset": [
        2339,
        2356
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1479": {
      "fn": "BettingGame.play",
      "offset": [
        2359,
        2372
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D1"
    },
    "1482": {
      "fn": "BettingGame.play",
      "offset": [
        2363,
        2372
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1483": {
      "fn": "BettingGame.play",
      "offset": [
        2359,
        2360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1485": {
      "fn": "BettingGame.play",
      "offset": [
        2359,
        2372
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x921"
    },
    "1488": {
      "fn": "BettingGame.play",
      "jump": "i",
      "offset": [
        2359,
        2372
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1489": {
      "fn": "BettingGame.play",
      "offset": [
        2359,
        2372
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1490": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x40"
    },
    "1492": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1493": {
      "fn": "BettingGame.play",
      "offset": [
        2339,
        2372
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1494": {
      "fn": "BettingGame.play",
      "offset": [
        2339,
        2372
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "BettingGame.play",
      "offset": [
        2394,
        2404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1497": {
      "fn": "BettingGame.play",
      "offset": [
        2394,
        2404
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1498": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1499": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1500": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "1503": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "MUL",
      "path": "2"
    },
    "1504": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1505": {
      "fn": "BettingGame.play",
      "offset": [
        2339,
        2372
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1506": {
      "fn": "BettingGame.play",
      "offset": [
        2339,
        2372
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1507": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1509": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1510": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1511": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1512": {
      "fn": "BettingGame.play",
      "offset": [
        2339,
        2372
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1513": {
      "fn": "BettingGame.play",
      "offset": [
        2394,
        2404
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1514": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP9",
      "path": "2"
    },
    "1515": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "CALL",
      "path": "2"
    },
    "1516": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1517": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "POP",
      "path": "2"
    },
    "1518": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "POP",
      "path": "2"
    },
    "1519": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "POP",
      "path": "2"
    },
    "1520": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "POP",
      "path": "2"
    },
    "1521": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1522": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1523": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1524": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x601"
    },
    "1527": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1528": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1529": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1531": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1532": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1533": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1534": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1536": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1537": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1538": {
      "fn": "BettingGame.play",
      "offset": [
        2386,
        2425
      ],
      "op": "POP",
      "path": "2"
    },
    "1539": {
      "fn": "BettingGame.play",
      "offset": [
        2325,
        2436
      ],
      "op": "POP",
      "path": "2"
    },
    "1540": {
      "fn": "BettingGame.play",
      "offset": [
        2310,
        2436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1541": {
      "fn": "BettingGame.play",
      "offset": [
        2458,
        2467
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x5"
    },
    "1543": {
      "fn": "BettingGame.play",
      "offset": [
        2458,
        2467
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1544": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1546": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1547": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1548": {
      "fn": "BettingGame.play",
      "offset": [
        2469,
        2479
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1549": {
      "op": "DUP2"
    },
    "1550": {
      "op": "MSTORE"
    },
    "1551": {
      "fn": "BettingGame.play",
      "offset": [
        2481,
        2490
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "DUP3"
    },
    "1555": {
      "op": "ADD"
    },
    "1556": {
      "op": "MSTORE"
    },
    "1557": {
      "op": "DUP4"
    },
    "1558": {
      "op": "ISZERO"
    },
    "1559": {
      "op": "ISZERO"
    },
    "1560": {
      "op": "DUP2"
    },
    "1561": {
      "op": "DUP4"
    },
    "1562": {
      "op": "ADD"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1565": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1566": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xF83BA849142075C91A16090145A5AE9453A3DB63DB6F4D0320E28649AC4316E5"
    },
    "1599": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1600": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1601": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1602": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "SUB",
      "path": "2"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1605": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "ADD",
      "path": "2"
    },
    "1606": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1607": {
      "fn": "BettingGame.play",
      "offset": [
        2451,
        2502
      ],
      "op": "LOG2",
      "path": "2"
    },
    "1608": {
      "fn": "BettingGame.play",
      "offset": [
        2520,
        2529
      ],
      "op": "SWAP5",
      "path": "2",
      "statement": 15
    },
    "1609": {
      "fn": "BettingGame.play",
      "offset": [
        1500,
        2536
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "POP"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "fn": "BettingGame.play",
      "jump": "o",
      "offset": [
        1500,
        2536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1615": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2542,
        2909
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1616": {
      "offset": [
        1381,
        1386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1618": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        1381,
        1386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "op": "SUB"
    },
    "1627": {
      "offset": [
        1381,
        1386
      ],
      "op": "AND",
      "path": "2"
    },
    "1628": {
      "offset": [
        1367,
        1377
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1629": {
      "offset": [
        1367,
        1386
      ],
      "op": "EQ",
      "path": "2"
    },
    "1630": {
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A3"
    },
    "1633": {
      "offset": [
        1359,
        1414
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1634": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1636": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        1359,
        1414
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1643": {
      "op": "SHL"
    },
    "1644": {
      "offset": [
        1359,
        1414
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1645": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        1359,
        1414
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1648": {
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1650": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        1359,
        1414
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1651": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        1359,
        1414
      ],
      "op": "ADD",
      "path": "2"
    },
    "1652": {
      "op": "MSTORE"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1657": {
      "op": "DUP3"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH23",
      "value": "0x31B0B63632B91034B9903737BA103A34329030B236B4B7"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "offset": [
        1359,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "1698": {
      "op": "JUMP"
    },
    "1699": {
      "offset": [
        1359,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1700": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1702": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2692
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1703": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2725,
        2732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1705": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2725,
        2732
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1706": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2746,
        2760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1708": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2746,
        2760
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1709": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1711": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1712": {
      "op": "PUSH4",
      "value": "0x5D3B1D3"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0xE4"
    },
    "1719": {
      "op": "SHL"
    },
    "1720": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1721": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1722": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1724": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1725": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "ADD",
      "path": "2"
    },
    "1726": {
      "op": "SWAP3"
    },
    "1727": {
      "op": "SWAP1"
    },
    "1728": {
      "op": "SWAP3"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2746,
        2760
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1739": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2746,
        2760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1740": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2746,
        2760
      ],
      "op": "AND",
      "path": "2"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1743": {
      "op": "DUP4"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2774,
        2794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFFF"
    },
    "1749": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2774,
        2794
      ],
      "op": "PUSH9",
      "path": "2",
      "value": "0x10000000000000000"
    },
    "1759": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2774,
        2794
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1760": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2774,
        2794
      ],
      "op": "DIV",
      "path": "2"
    },
    "1761": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2774,
        2794
      ],
      "op": "AND",
      "path": "2"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1764": {
      "op": "DUP4"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "MSTORE"
    },
    "1767": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2808,
        2824
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1776": {
      "op": "SHL"
    },
    "1777": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2808,
        2824
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1778": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2808,
        2824
      ],
      "op": "DIV",
      "path": "2"
    },
    "1779": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2808,
        2824
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1780": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2808,
        2824
      ],
      "op": "AND",
      "path": "2"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1783": {
      "op": "DUP5"
    },
    "1784": {
      "op": "ADD"
    },
    "1785": {
      "op": "MSTORE"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2838,
        2846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1792": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2838,
        2846
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1793": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2838,
        2846
      ],
      "op": "DIV",
      "path": "2"
    },
    "1794": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2838,
        2846
      ],
      "op": "AND",
      "path": "2"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1797": {
      "op": "DUP3"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1802": {
      "op": "SWAP2"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "op": "SUB"
    },
    "1811": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2692
      ],
      "op": "AND",
      "path": "2"
    },
    "1812": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1813": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2711
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5D3B1D30"
    },
    "1818": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2711
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1821": {
      "op": "ADD"
    },
    "1822": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1824": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1826": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1827": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1828": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1829": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "SUB",
      "path": "2"
    },
    "1830": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1831": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1833": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1834": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "GAS",
      "path": "2"
    },
    "1835": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "CALL",
      "path": "2"
    },
    "1836": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1837": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1838": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1839": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73C"
    },
    "1842": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1843": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1844": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1846": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1847": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1848": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1849": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1851": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1852": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1853": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "POP",
      "path": "2"
    },
    "1854": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "POP",
      "path": "2"
    },
    "1855": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "POP",
      "path": "2"
    },
    "1856": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "POP",
      "path": "2"
    },
    "1857": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1859": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1860": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1861": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1863": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "NOT",
      "path": "2"
    },
    "1864": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1866": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1867": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "ADD",
      "path": "2"
    },
    "1868": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "AND",
      "path": "2"
    },
    "1869": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1870": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "ADD",
      "path": "2"
    },
    "1871": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1872": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1874": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1875": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "POP",
      "path": "2"
    },
    "1876": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1877": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "ADD",
      "path": "2"
    },
    "1878": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1879": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x760"
    },
    "1882": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1883": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1884": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BE"
    },
    "1887": {
      "fn": "BettingGame.requestRandomWords",
      "jump": "i",
      "offset": [
        2681,
        2856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1888": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2681,
        2856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1889": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2661,
        2856
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1890": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2661,
        2856
      ],
      "op": "POP",
      "path": "2"
    },
    "1891": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2872,
        2902
      ],
      "op": "PUSH32",
      "path": "2",
      "statement": 16,
      "value": "0x5D7D0431C4991FCC9F63F03AD0EAD4128B866A8ED115A818B6D87A3AFEDB7264"
    },
    "1924": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2892,
        2901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1925": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2872,
        2902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1927": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2872,
        2902
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1928": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2872,
        2902
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x369"
    },
    "1931": {
      "fn": "BettingGame.requestRandomWords",
      "offset": [
        2872,
        2902
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1932": {
      "op": "DUP2"
    },
    "1933": {
      "op": "MSTORE"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1936": {
      "op": "ADD"
    },
    "1937": {
      "op": "SWAP1"
    },
    "1938": {
      "op": "JUMP"
    },
    "1939": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        2915,
        3154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1940": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3048,
        3054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1942": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1943": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3064,
        3076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1944": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3064,
        3083
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1945": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3060,
        3061
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1946": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3060,
        3083
      ],
      "op": "LT",
      "path": "2"
    },
    "1947": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1948": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E4"
    },
    "1951": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1952": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3115
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x4"
    },
    "1954": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3133
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1955": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3134,
        3135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1956": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1957": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1958": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1959": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "LT",
      "path": "2"
    },
    "1960": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B3"
    },
    "1963": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1964": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B3"
    },
    "1967": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x970"
    },
    "1970": {
      "fn": "BettingGame.fulfillRandomWords",
      "jump": "i",
      "offset": [
        3121,
        3136
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1971": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1972": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1974": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1975": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1976": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "MUL",
      "path": "2"
    },
    "1977": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1978": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1979": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1980": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "ADD",
      "path": "2"
    },
    "1981": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1982": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "ADD",
      "path": "2"
    },
    "1983": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3121,
        3136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1984": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1985": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1986": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1988": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1989": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "ADD",
      "path": "2"
    },
    "1990": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1991": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1994": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1995": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1996": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1997": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1998": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1999": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2000": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2001": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "ADD",
      "path": "2"
    },
    "2002": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3104,
        3137
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2003": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 18
    },
    "2004": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7DC"
    },
    "2007": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2008": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x940"
    },
    "2011": {
      "fn": "BettingGame.fulfillRandomWords",
      "jump": "i",
      "offset": [
        3085,
        3088
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2012": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2013": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2014": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "POP",
      "path": "2"
    },
    "2015": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3085,
        3088
      ],
      "op": "POP",
      "path": "2"
    },
    "2016": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x796"
    },
    "2019": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2020": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2021": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        3043,
        3148
      ],
      "op": "POP",
      "path": "2"
    },
    "2022": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        2915,
        3154
      ],
      "op": "POP",
      "path": "2"
    },
    "2023": {
      "fn": "BettingGame.fulfillRandomWords",
      "offset": [
        2915,
        3154
      ],
      "op": "POP",
      "path": "2"
    },
    "2024": {
      "fn": "BettingGame.fulfillRandomWords",
      "jump": "o",
      "offset": [
        2915,
        3154
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2025": {
      "op": "JUMPDEST"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2030": {
      "op": "DUP3"
    },
    "2031": {
      "op": "DUP5"
    },
    "2032": {
      "op": "SUB"
    },
    "2033": {
      "op": "SLT"
    },
    "2034": {
      "op": "ISZERO"
    },
    "2035": {
      "op": "PUSH2",
      "value": "0x7FB"
    },
    "2038": {
      "op": "JUMPI"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2041": {
      "op": "DUP1"
    },
    "2042": {
      "op": "REVERT"
    },
    "2043": {
      "op": "JUMPDEST"
    },
    "2044": {
      "op": "POP"
    },
    "2045": {
      "op": "CALLDATALOAD"
    },
    "2046": {
      "op": "SWAP2"
    },
    "2047": {
      "op": "SWAP1"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "jump": "o",
      "op": "JUMP"
    },
    "2050": {
      "op": "JUMPDEST"
    },
    "2051": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "REVERT"
    },
    "2072": {
      "op": "JUMPDEST"
    },
    "2073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2075": {
      "op": "DUP1"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2078": {
      "op": "DUP4"
    },
    "2079": {
      "op": "DUP6"
    },
    "2080": {
      "op": "SUB"
    },
    "2081": {
      "op": "SLT"
    },
    "2082": {
      "op": "ISZERO"
    },
    "2083": {
      "op": "PUSH2",
      "value": "0x82B"
    },
    "2086": {
      "op": "JUMPI"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2089": {
      "op": "DUP1"
    },
    "2090": {
      "op": "REVERT"
    },
    "2091": {
      "op": "JUMPDEST"
    },
    "2092": {
      "op": "DUP3"
    },
    "2093": {
      "op": "CALLDATALOAD"
    },
    "2094": {
      "op": "SWAP2"
    },
    "2095": {
      "op": "POP"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2098": {
      "op": "DUP1"
    },
    "2099": {
      "op": "DUP5"
    },
    "2100": {
      "op": "ADD"
    },
    "2101": {
      "op": "CALLDATALOAD"
    },
    "2102": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2111": {
      "op": "DUP1"
    },
    "2112": {
      "op": "DUP3"
    },
    "2113": {
      "op": "GT"
    },
    "2114": {
      "op": "ISZERO"
    },
    "2115": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2118": {
      "op": "JUMPI"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2121": {
      "op": "DUP1"
    },
    "2122": {
      "op": "REVERT"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "op": "DUP2"
    },
    "2125": {
      "op": "DUP7"
    },
    "2126": {
      "op": "ADD"
    },
    "2127": {
      "op": "SWAP2"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "op": "DUP7"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2132": {
      "op": "DUP4"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "op": "SLT"
    },
    "2135": {
      "op": "PUSH2",
      "value": "0x85F"
    },
    "2138": {
      "op": "JUMPI"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2141": {
      "op": "DUP1"
    },
    "2142": {
      "op": "REVERT"
    },
    "2143": {
      "op": "JUMPDEST"
    },
    "2144": {
      "op": "DUP2"
    },
    "2145": {
      "op": "CALLDATALOAD"
    },
    "2146": {
      "op": "DUP2"
    },
    "2147": {
      "op": "DUP2"
    },
    "2148": {
      "op": "GT"
    },
    "2149": {
      "op": "ISZERO"
    },
    "2150": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2153": {
      "op": "JUMPI"
    },
    "2154": {
      "op": "PUSH2",
      "value": "0x871"
    },
    "2157": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "2160": {
      "jump": "i",
      "op": "JUMP"
    },
    "2161": {
      "op": "JUMPDEST"
    },
    "2162": {
      "op": "DUP1"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2165": {
      "op": "SHL"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2168": {
      "op": "MLOAD"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2171": {
      "op": "NOT"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2174": {
      "op": "DUP4"
    },
    "2175": {
      "op": "ADD"
    },
    "2176": {
      "op": "AND"
    },
    "2177": {
      "op": "DUP2"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "DUP2"
    },
    "2180": {
      "op": "DUP2"
    },
    "2181": {
      "op": "LT"
    },
    "2182": {
      "op": "DUP6"
    },
    "2183": {
      "op": "DUP3"
    },
    "2184": {
      "op": "GT"
    },
    "2185": {
      "op": "OR"
    },
    "2186": {
      "op": "ISZERO"
    },
    "2187": {
      "op": "PUSH2",
      "value": "0x896"
    },
    "2190": {
      "op": "JUMPI"
    },
    "2191": {
      "op": "PUSH2",
      "value": "0x896"
    },
    "2194": {
      "op": "PUSH2",
      "value": "0x802"
    },
    "2197": {
      "jump": "i",
      "op": "JUMP"
    },
    "2198": {
      "op": "JUMPDEST"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "SWAP2"
    },
    "2203": {
      "op": "DUP3"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "DUP5"
    },
    "2206": {
      "op": "DUP3"
    },
    "2207": {
      "op": "ADD"
    },
    "2208": {
      "op": "SWAP3"
    },
    "2209": {
      "op": "POP"
    },
    "2210": {
      "op": "DUP4"
    },
    "2211": {
      "op": "DUP2"
    },
    "2212": {
      "op": "ADD"
    },
    "2213": {
      "op": "DUP6"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "op": "SWAP2"
    },
    "2216": {
      "op": "DUP10"
    },
    "2217": {
      "op": "DUP4"
    },
    "2218": {
      "op": "GT"
    },
    "2219": {
      "op": "ISZERO"
    },
    "2220": {
      "op": "PUSH2",
      "value": "0x8B4"
    },
    "2223": {
      "op": "JUMPI"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2226": {
      "op": "DUP1"
    },
    "2227": {
      "op": "REVERT"
    },
    "2228": {
      "op": "JUMPDEST"
    },
    "2229": {
      "op": "SWAP4"
    },
    "2230": {
      "op": "DUP6"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "SWAP4"
    },
    "2233": {
      "op": "JUMPDEST"
    },
    "2234": {
      "op": "DUP3"
    },
    "2235": {
      "op": "DUP6"
    },
    "2236": {
      "op": "LT"
    },
    "2237": {
      "op": "ISZERO"
    },
    "2238": {
      "op": "PUSH2",
      "value": "0x8D2"
    },
    "2241": {
      "op": "JUMPI"
    },
    "2242": {
      "op": "DUP5"
    },
    "2243": {
      "op": "CALLDATALOAD"
    },
    "2244": {
      "op": "DUP5"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "SWAP4"
    },
    "2247": {
      "op": "DUP6"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "op": "SWAP4"
    },
    "2250": {
      "op": "SWAP3"
    },
    "2251": {
      "op": "DUP6"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "op": "SWAP3"
    },
    "2254": {
      "op": "PUSH2",
      "value": "0x8B9"
    },
    "2257": {
      "op": "JUMP"
    },
    "2258": {
      "op": "JUMPDEST"
    },
    "2259": {
      "op": "DUP1"
    },
    "2260": {
      "op": "SWAP7"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "op": "POP"
    },
    "2263": {
      "op": "POP"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "SWAP3"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "op": "SWAP3"
    },
    "2271": {
      "op": "SWAP1"
    },
    "2272": {
      "op": "POP"
    },
    "2273": {
      "jump": "o",
      "op": "JUMP"
    },
    "2274": {
      "op": "JUMPDEST"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2279": {
      "op": "DUP3"
    },
    "2280": {
      "op": "DUP5"
    },
    "2281": {
      "op": "SUB"
    },
    "2282": {
      "op": "SLT"
    },
    "2283": {
      "op": "ISZERO"
    },
    "2284": {
      "op": "PUSH2",
      "value": "0x8F4"
    },
    "2287": {
      "op": "JUMPI"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2290": {
      "op": "DUP1"
    },
    "2291": {
      "op": "REVERT"
    },
    "2292": {
      "op": "JUMPDEST"
    },
    "2293": {
      "op": "DUP2"
    },
    "2294": {
      "op": "CALLDATALOAD"
    },
    "2295": {
      "op": "DUP1"
    },
    "2296": {
      "op": "ISZERO"
    },
    "2297": {
      "op": "ISZERO"
    },
    "2298": {
      "op": "DUP2"
    },
    "2299": {
      "op": "EQ"
    },
    "2300": {
      "op": "PUSH2",
      "value": "0x904"
    },
    "2303": {
      "op": "JUMPI"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2306": {
      "op": "DUP1"
    },
    "2307": {
      "op": "REVERT"
    },
    "2308": {
      "op": "JUMPDEST"
    },
    "2309": {
      "op": "SWAP4"
    },
    "2310": {
      "op": "SWAP3"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "op": "POP"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "jump": "o",
      "op": "JUMP"
    },
    "2315": {
      "op": "JUMPDEST"
    },
    "2316": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2326": {
      "op": "MSTORE"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2336": {
      "op": "REVERT"
    },
    "2337": {
      "op": "JUMPDEST"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2340": {
      "op": "DUP2"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2343": {
      "op": "NOT"
    },
    "2344": {
      "op": "DIV"
    },
    "2345": {
      "op": "DUP4"
    },
    "2346": {
      "op": "GT"
    },
    "2347": {
      "op": "DUP3"
    },
    "2348": {
      "op": "ISZERO"
    },
    "2349": {
      "op": "ISZERO"
    },
    "2350": {
      "op": "AND"
    },
    "2351": {
      "op": "ISZERO"
    },
    "2352": {
      "op": "PUSH2",
      "value": "0x93B"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "PUSH2",
      "value": "0x93B"
    },
    "2359": {
      "op": "PUSH2",
      "value": "0x90B"
    },
    "2362": {
      "jump": "i",
      "op": "JUMP"
    },
    "2363": {
      "op": "JUMPDEST"
    },
    "2364": {
      "op": "POP"
    },
    "2365": {
      "op": "MUL"
    },
    "2366": {
      "op": "SWAP1"
    },
    "2367": {
      "jump": "o",
      "op": "JUMP"
    },
    "2368": {
      "op": "JUMPDEST"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "ADD"
    },
    "2375": {
      "op": "PUSH2",
      "value": "0x952"
    },
    "2378": {
      "op": "JUMPI"
    },
    "2379": {
      "op": "PUSH2",
      "value": "0x952"
    },
    "2382": {
      "op": "PUSH2",
      "value": "0x90B"
    },
    "2385": {
      "jump": "i",
      "op": "JUMP"
    },
    "2386": {
      "op": "JUMPDEST"
    },
    "2387": {
      "op": "POP"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "op": "SWAP1"
    },
    "2392": {
      "jump": "o",
      "op": "JUMP"
    },
    "2393": {
      "op": "JUMPDEST"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2396": {
      "op": "DUP3"
    },
    "2397": {
      "op": "DUP3"
    },
    "2398": {
      "op": "LT"
    },
    "2399": {
      "op": "ISZERO"
    },
    "2400": {
      "op": "PUSH2",
      "value": "0x96B"
    },
    "2403": {
      "op": "JUMPI"
    },
    "2404": {
      "op": "PUSH2",
      "value": "0x96B"
    },
    "2407": {
      "op": "PUSH2",
      "value": "0x90B"
    },
    "2410": {
      "jump": "i",
      "op": "JUMP"
    },
    "2411": {
      "op": "JUMPDEST"
    },
    "2412": {
      "op": "POP"
    },
    "2413": {
      "op": "SUB"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "jump": "o",
      "op": "JUMP"
    },
    "2416": {
      "op": "JUMPDEST"
    },
    "2417": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2432": {
      "op": "MSTORE"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2437": {
      "op": "REVERT"
    },
    "2438": {
      "op": "JUMPDEST"
    },
    "2439": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2454": {
      "op": "MSTORE"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2459": {
      "op": "REVERT"
    },
    "2460": {
      "op": "JUMPDEST"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2463": {
      "op": "DUP3"
    },
    "2464": {
      "op": "PUSH2",
      "value": "0x9B9"
    },
    "2467": {
      "op": "JUMPI"
    },
    "2468": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2478": {
      "op": "MSTORE"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2481": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2483": {
      "op": "MSTORE"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2488": {
      "op": "REVERT"
    },
    "2489": {
      "op": "JUMPDEST"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "MOD"
    },
    "2492": {
      "op": "SWAP1"
    },
    "2493": {
      "jump": "o",
      "op": "JUMP"
    },
    "2494": {
      "op": "JUMPDEST"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2499": {
      "op": "DUP3"
    },
    "2500": {
      "op": "DUP5"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "op": "SLT"
    },
    "2503": {
      "op": "ISZERO"
    },
    "2504": {
      "op": "PUSH2",
      "value": "0x9D0"
    },
    "2507": {
      "op": "JUMPI"
    },
    "2508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2510": {
      "op": "DUP1"
    },
    "2511": {
      "op": "REVERT"
    },
    "2512": {
      "op": "JUMPDEST"
    },
    "2513": {
      "op": "POP"
    },
    "2514": {
      "op": "MLOAD"
    },
    "2515": {
      "op": "SWAP2"
    },
    "2516": {
      "op": "SWAP1"
    },
    "2517": {
      "op": "POP"
    },
    "2518": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cd12d50cb2521ce22c29666911773f77d0bd9de9",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\n\ncontract BettingGame is VRFConsumerBaseV2 {\n\n    address payable admin;\n\n    VRFCoordinatorV2Interface COORDINATOR;\n    bytes32 keyhash;\n    uint64 subscriptionId;\n    uint16 requestConfirmations = 3;\n    uint32 numWords = 50;\n    uint32 callbackGasLimit = 10 ** 7;\n\n    uint256[] randomWords;\n\n    uint256 public gameCount = 0;\n    mapping(uint256 => Game) public games;\n\n    struct Game {\n        uint256 id;\n        bool head;\n        uint256 amount;\n        address payable player;\n    }\n\n    event RequestedRandomness(uint256 requestId);\n    event Withdraw(address admin, uint256 amount);\n    event Received(address indexed sender, uint256 amount);\n    event Result(uint256 indexed gameId, address player, uint256 amount, bool won);\n\n    constructor(\n        address _vrfCoordinator,\n        bytes32 _keyhash,\n        uint64 _subscriptionId\n    ) VRFConsumerBaseV2(_vrfCoordinator) {\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\n        admin = payable(msg.sender);\n        keyhash = _keyhash;\n        subscriptionId = _subscriptionId;\n    }\n\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, 'caller is not the admin');\n        _;\n    }\n\n    // _head represents whether player has chosen Head or not\n    function play(bool _head) public payable returns (bool){\n        require(msg.value >= 10 ** 15, \"BettingGame: minimum allowed bet is 0.001 ether\");\n        require(address(this).balance >= 2 * msg.value, \"BettingGame: insufficient vault balance\");\n        require(randomWords.length > 0, \"BettingGame: random words unavailable\");\n\n        gameCount++;\n        games[gameCount] = Game(gameCount, _head, msg.value, payable(msg.sender));\n\n        uint256 randomWord = randomWords[randomWords.length - 1];\n        randomWords.pop();\n\n        // Add more words to the array\n        if (randomWords.length == 20) {\n            requestRandomWords();\n        }\n\n        // Even randomWord represents HEADS, odd represents TAILS\n        bool head = randomWord % 2 == 0;\n        bool playerWon = head == _head;\n\n        if (playerWon) {\n            uint256 winAmount = 2 * msg.value;\n            payable(msg.sender).transfer(winAmount);\n        }\n\n        emit Result(gameCount, msg.sender, msg.value, playerWon);\n\n        return playerWon;\n    }\n\n    function requestRandomWords() public onlyAdmin {\n        // Will revert if subscription is not set and funded.\n        uint256 requestId = COORDINATOR.requestRandomWords(\n            keyhash,\n            subscriptionId,\n            requestConfirmations,\n            callbackGasLimit,\n            numWords\n        );\n\n        emit RequestedRandomness(requestId);\n    }\n\n    function fulfillRandomWords(\n        uint256 requestId,\n        uint256[] memory _randomWords\n    ) internal override {\n        for (uint i = 0; i < _randomWords.length; i++) {\n            randomWords.push(_randomWords[i]);\n        }\n    }\n\n    function withdrawEther(uint256 amount) external onlyAdmin {\n        require(address(this).balance >= amount, \"BettingGame: insufficient balance\");\n        admin.transfer(amount);\n\n        emit Withdraw(admin, amount);\n    }\n}\n",
  "sourceMap": "169:3216:2:-:0;;;367:1;337:31;;-1:-1:-1;;;;;;;;400:33:2;;;;;-1:-1:-1;468:28:2;;912:324;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5599:32:0;;;;;;;1066:11:2::1;:56:::0;;-1:-1:-1;;;;;;1066:56:2;;::::1;::::0;;::::1;::::0;;:11:::1;1132:27:::0;;;;::::1;1148:10;1132:27;::::0;;1169:7:::1;:18:::0;1197:14:::1;:32:::0;;-1:-1:-1;;;;;1197:32:2;;::::1;-1:-1:-1::0;;;;;;1197:32:2;;::::1;::::0;;;::::1;::::0;;169:3216;;14:524:3;101:6;109;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;212:16;;-1:-1:-1;;;;;257:31:3;;247:42;;237:70;;303:1;300;293:12;237:70;371:2;356:18;;350:25;420:2;405:18;;399:25;326:5;;-1:-1:-1;350:25:3;-1:-1:-1;;;;;;455:32:3;;443:45;;433:73;;502:1;499;492:12;433:73;525:7;515:17;;;14:524;;;;;:::o;:::-;169:3216:2;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BettingGame.sol",
  "type": "contract"
}